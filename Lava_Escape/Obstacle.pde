class Obstacle{
  //bounds
  float l;
  float r;
  float u;
  float d;
  float x;
  float y;
  //                                                                       Platform sprite depends on the score, if score exceeds a certain amount and the "area" is cleared, platforms will change
  Obstacle(float xx, float yy){
    x = xx;
    y = yy;
    l = xx;
    r = x + 48;
    u = yy;
    d = yy + 48;
    Display();
  }
  void Display(){
    fill(38, 70, 8);rect(x + 45, y + 0, 3, 3);rect(x + 39, y + 3, 3, 3);rect(x + 36, y + 3, 3, 3);rect(x + 30, y + 0, 3, 3);rect(x + 27, y + 0, 3, 3);rect(x + 6, y + 0, 3, 3);rect(x + 9, y + 0, 3, 3);rect(x + 15, y + 0, 3, 3);rect(x + 0, y + 3, 3, 3);rect(x + 6, y + 9, 3, 3);rect(x + 9, y + 9, 3, 3);rect(x + 24, y + 9, 3, 3);rect(x + 33, y + 9, 3, 3);rect(x + 39, y + 15, 3, 3);rect(x + 21, y + 18, 3, 3);rect(x + 24, y + 21, 3, 3);rect(x + 12, y + 15, 3, 3);rect(x + 3, y + 21, 3, 3);rect(x + 27, y + 27, 3, 3);rect(x + 30, y + 24, 3, 3);rect(x + 39, y + 24, 3, 3);rect(x + 45, y + 24, 3, 3);rect(x + 45, y + 27, 3, 3);rect(x + 33, y + 39, 3, 3);rect(x + 6, y + 30, 3, 3);fill(31, 56, 6);rect(x + 42, y + 3, 3, 3);rect(x + 42, y + 0, 3, 3);rect(x + 39, y + 0, 3, 3);rect(x + 33, y + 0, 3, 3);rect(x + 33, y + 3, 3, 3);rect(x + 30, y + 3, 3, 3);rect(x + 27, y + 3, 3, 3);rect(x + 24, y + 3, 3, 3);rect(x + 24, y + 0, 3, 3);rect(x + 27, y + 6, 3, 3);rect(x + 24, y + 12, 3, 3);rect(x + 12, y + 3, 3, 3);rect(x + 15, y + 3, 3, 3);rect(x + 18, y + 3, 3, 3);rect(x + 0, y + 0, 3, 3);rect(x + 3, y + 0, 3, 3);rect(x + 3, y + 6, 3, 3);rect(x + 9, y + 12, 3, 3);rect(x + 9, y + 18, 3, 3);rect(x + 6, y + 18, 3, 3);rect(x + 3, y + 27, 3, 3);rect(x + 18, y + 18, 3, 3);rect(x + 21, y + 21, 3, 3);rect(x + 24, y + 18, 3, 3);rect(x + 24, y + 24, 3, 3);rect(x + 39, y + 27, 3, 3);rect(x + 42, y + 24, 3, 3);rect(x + 42, y + 21, 3, 3);rect(x + 39, y + 18, 3, 3);rect(x + 33, y + 27, 3, 3);rect(x + 39, y + 39, 3, 3);rect(x + 42, y + 42, 3, 3);rect(x + 21, y + 45, 3, 3);rect(x + 18, y + 33, 3, 3);rect(x + 15, y + 36, 3, 3);fill(29, 56, 5);rect(x + 45, y + 3, 3, 3);rect(x + 33, y + 12, 3, 3);rect(x + 36, y + 39, 3, 3);fill(36, 70, 6);rect(x + 36, y + 0, 3, 3);rect(x + 3, y + 45, 3, 3);fill(51, 97, 13);rect(x + 21, y + 0, 3, 3);fill(46, 84, 9);rect(x + 18, y + 0, 3, 3);rect(x + 12, y + 0, 3, 3);rect(x + 27, y + 9, 3, 3);rect(x + 21, y + 15, 3, 3);rect(x + 0, y + 21, 3, 3);rect(x + 0, y + 24, 3, 3);rect(x + 3, y + 30, 3, 3);rect(x + 45, y + 21, 3, 3);rect(x + 36, y + 33, 3, 3);rect(x + 12, y + 36, 3, 3);rect(x + 12, y + 39, 3, 3);rect(x + 15, y + 42, 3, 3);fill(37, 70, 9);rect(x + 21, y + 3, 3, 3);rect(x + 3, y + 3, 3, 3);rect(x + 12, y + 18, 3, 3);rect(x + 42, y + 18, 3, 3);rect(x + 24, y + 45, 3, 3);fill(30, 56, 7);rect(x + 9, y + 3, 3, 3);rect(x + 6, y + 3, 3, 3);rect(x + 30, y + 9, 3, 3);fill(53, 98, 11);rect(x + 6, y + 6, 3, 3);rect(x + 12, y + 12, 3, 3);rect(x + 21, y + 12, 3, 3);rect(x + 36, y + 12, 3, 3);rect(x + 36, y + 15, 3, 3);rect(x + 30, y + 27, 3, 3);rect(x + 36, y + 27, 3, 3);rect(x + 27, y + 24, 3, 3);rect(x + 27, y + 21, 3, 3);rect(x + 21, y + 30, 3, 3);rect(x + 24, y + 33, 3, 3);rect(x + 39, y + 36, 3, 3);rect(x + 30, y + 45, 3, 3);rect(x + 15, y + 45, 3, 3);rect(x + 9, y + 36, 3, 3);rect(x + 0, y + 30, 3, 3);fill(39, 70, 7);rect(x + 18, y + 15, 3, 3);rect(x + 9, y + 33, 3, 3);rect(x + 18, y + 36, 3, 3);fill(47, 84, 8);rect(x + 0, y + 45, 3, 3);rect(x + 15, y + 15, 3, 3);fill(55, 98, 5);rect(x + 9, y + 45, 3, 3);rect(x + 15, y + 18, 3, 3);fill(45, 84, 10);rect(x + 3, y + 18, 3, 3);rect(x + 15, y + 39, 3, 3);fill(54, 98, 10);rect(x + 0, y + 27, 3, 3);rect(x + 3, y + 33, 3, 3);rect(x + 0, y + 42, 3, 3);rect(x + 12, y + 42, 3, 3);rect(x + 33, y + 42, 3, 3);fill(66, 126, 16);rect(x + 6, y + 45, 3, 3);rect(x + 12, y + 45, 3, 3);fill(43, 84, 7);rect(x + 6, y + 33, 3, 3);rect(x + 21, y + 33, 3, 3);fill(44, 84, 11);rect(x + 24, y + 30, 3, 3);rect(x + 27, y + 30, 3, 3);rect(x + 36, y + 36, 3, 3);fill(67, 126, 15);rect(x + 45, y + 45, 3, 3);rect(x + 27, y + 45, 3, 3);fill(62, 112, 11);rect(x + 18, y + 45, 3, 3);fill(52, 98, 12);rect(x + 42, y + 39, 3, 3);rect(x + 36, y + 30, 3, 3);fill(37, 69, 9);rect(x + 30, y + 42, 3, 3);fill(32, 53, 8);rect(x + 45, y + 42, 3, 3);fill(156, 49, 19);rect(x + 18, y + 27, 3, 3);rect(x + 18, y + 24, 3, 3);rect(x + 15, y + 30, 3, 3);rect(x + 12, y + 30, 3, 3);rect(x + 9, y + 27, 3, 3);rect(x + 6, y + 24, 3, 3);rect(x + 9, y + 24, 3, 3);rect(x + 12, y + 24, 3, 3);rect(x + 15, y + 24, 3, 3);rect(x + 15, y + 27, 3, 3);rect(x + 12, y + 27, 3, 3);rect(x + 3, y + 12, 3, 3);rect(x + 0, y + 15, 3, 3);rect(x + 0, y + 12, 3, 3);rect(x + 0, y + 9, 3, 3);rect(x + 15, y + 9, 3, 3);rect(x + 18, y + 9, 3, 3);rect(x + 45, y + 9, 3, 3);rect(x + 42, y + 9, 3, 3);rect(x + 42, y + 12, 3, 3);rect(x + 45, y + 12, 3, 3);rect(x + 45, y + 15, 3, 3);rect(x + 42, y + 30, 3, 3);rect(x + 42, y + 33, 3, 3);rect(x + 45, y + 33, 3, 3);rect(x + 45, y + 36, 3, 3);rect(x + 0, y + 36, 3, 3);rect(x + 3, y + 39, 3, 3);rect(x + 6, y + 39, 3, 3);rect(x + 21, y + 39, 3, 3);rect(x + 24, y + 39, 3, 3);rect(x + 27, y + 39, 3, 3);rect(x + 30, y + 36, 3, 3);rect(x + 30, y + 33, 3, 3);rect(x + 33, y + 21, 3, 3);rect(x + 33, y + 18, 3, 3);rect(x + 30, y + 18, 3, 3);rect(x + 30, y + 15, 3, 3);rect(x + 27, y + 15, 3, 3);fill(184, 51, 23);rect(x + 12, y + 33, 3, 3);fill(184, 57, 23);rect(x + 0, y + 18, 3, 3);rect(x + 3, y + 15, 3, 3);rect(x + 15, y + 12, 3, 3);rect(x + 18, y + 12, 3, 3);rect(x + 27, y + 18, 3, 3);rect(x + 36, y + 24, 3, 3);rect(x + 39, y + 12, 3, 3);rect(x + 42, y + 15, 3, 3);rect(x + 45, y + 18, 3, 3);rect(x + 9, y + 30, 3, 3);rect(x + 15, y + 33, 3, 3);rect(x + 18, y + 30, 3, 3);rect(x + 45, y + 39, 3, 3);rect(x + 0, y + 39, 3, 3);rect(x + 6, y + 42, 3, 3);rect(x + 9, y + 42, 3, 3);rect(x + 21, y + 42, 3, 3);rect(x + 30, y + 39, 3, 3);fill(170, 53, 21);rect(x + 6, y + 27, 3, 3);rect(x + 21, y + 27, 3, 3);rect(x + 6, y + 15, 3, 3);rect(x + 12, y + 9, 3, 3);rect(x + 21, y + 9, 3, 3);rect(x + 24, y + 42, 3, 3);rect(x + 33, y + 36, 3, 3);rect(x + 42, y + 36, 3, 3);rect(x + 39, y + 33, 3, 3);fill(198, 61, 25);rect(x + 3, y + 42, 3, 3);rect(x + 18, y + 42, 3, 3);rect(x + 33, y + 24, 3, 3);rect(x + 30, y + 21, 3, 3);fill(212, 65, 27);rect(x + 27, y + 42, 3, 3);fill(142, 45, 17);rect(x + 9, y + 39, 3, 3);rect(x + 0, y + 33, 3, 3);rect(x + 18, y + 39, 3, 3);rect(x + 27, y + 36, 3, 3);rect(x + 33, y + 33, 3, 3);rect(x + 36, y + 21, 3, 3);rect(x + 24, y + 15, 3, 3);fill(114, 38, 13);rect(x + 3, y + 36, 3, 3);rect(x + 33, y + 15, 3, 3);rect(x + 36, y + 9, 3, 3);fill(100, 30, 13);rect(x + 6, y + 36, 3, 3);fill(100, 33, 11);rect(x + 21, y + 36, 3, 3);rect(x + 45, y + 30, 3, 3);rect(x + 6, y + 21, 3, 3);rect(x + 33, y + 6, 3, 3);fill(115, 35, 15);rect(x + 24, y + 36, 3, 3);fill(100, 32, 10);rect(x + 27, y + 33, 3, 3);rect(x + 12, y + 21, 3, 3);rect(x + 36, y + 18, 3, 3);rect(x + 36, y + 6, 3, 3);fill(114, 37, 13);rect(x + 30, y + 30, 3, 3);rect(x + 42, y + 27, 3, 3);rect(x + 39, y + 21, 3, 3);rect(x + 21, y + 24, 3, 3);rect(x + 15, y + 21, 3, 3);rect(x + 0, y + 6, 3, 3);rect(x + 24, y + 6, 3, 3);rect(x + 18, y + 6, 3, 3);rect(x + 12, y + 6, 3, 3);rect(x + 30, y + 12, 3, 3);fill(128, 41, 15);rect(x + 3, y + 24, 3, 3);rect(x + 6, y + 12, 3, 3);rect(x + 3, y + 9, 3, 3);rect(x + 9, y + 6, 3, 3);rect(x + 15, y + 6, 3, 3);rect(x + 30, y + 6, 3, 3);rect(x + 27, y + 12, 3, 3);rect(x + 39, y + 30, 3, 3);rect(x + 24, y + 27, 3, 3);fill(86, 27, 10);rect(x + 9, y + 21, 3, 3);fill(86, 26, 11);rect(x + 18, y + 21, 3, 3);fill(128, 43, 15);rect(x + 9, y + 15, 3, 3);fill(100, 31, 12);rect(x + 45, y + 6, 3, 3);rect(x + 21, y + 6, 3, 3);rect(x + 33, y + 30, 3, 3);fill(156, 53, 19);rect(x + 39, y + 9, 3, 3);fill(114, 35, 14);rect(x + 39, y + 6, 3, 3);fill(86, 29, 8);rect(x + 42, y + 6, 3, 3);fill(202, 68, 30);rect(x + 33, y + 45, 3, 3);fill(189, 64, 28);rect(x + 36, y + 45, 3, 3);fill(176, 59, 26);rect(x + 42, y + 45, 3, 3);fill(202, 69, 30);rect(x + 39, y + 45, 3, 3);fill(124, 43, 18);rect(x + 39, y + 42, 3, 3);fill(150, 50, 22);rect(x + 36, y + 42, 3, 3);
  }
}
