ArrayList<Obstacle> obstacles = new ArrayList<Obstacle>();//when killing, i need to remove it form the list
ArrayList<Enemy> enemies = new ArrayList<Enemy>();//when killing, i need to remove it form the list
ArrayList<RoomFloors> roomfloors = new ArrayList<RoomFloors>();//when killing, i need to remove it form the list
float gravity = 6;
boolean paused = false;
boolean gameStarted = false;
void setup(){
  surface.setTitle("Lava Escape");
  //background(100);
  noStroke();
  for(int x = -40; x < 1000; x+=225){
    for(int y = -40; y < 780; y+=225){
      fill(58, 19, 6);rect(x + 279, y + 0, 9, 9);rect(x + 252, y + 0, 9, 9);rect(x + 207, y + 0, 9, 9);rect(x + 189, y + 0, 9, 9);rect(x + 144, y + 0, 9, 9);rect(x + 135, y + 0, 9, 9);rect(x + 99, y + 0, 9, 9);rect(x + 72, y + 0, 9, 9);rect(x + 63, y + 0, 9, 9);rect(x + 54, y + 0, 9, 9);rect(x + 153, y + 72, 9, 9);rect(x + 135, y + 72, 9, 9);rect(x + 126, y + 72, 9, 9);rect(x + 153, y + 72, 9, 9);rect(x + 198, y + 72, 9, 9);rect(x + 207, y + 72, 9, 9);rect(x + 216, y + 72, 9, 9);rect(x + 225, y + 72, 9, 9);rect(x + 234, y + 72, 9, 9);rect(x + 261, y + 72, 9, 9);rect(x + 252, y + 81, 9, 9);rect(x + 153, y + 144, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 171, y + 180, 9, 9);rect(x + 99, y + 144, 9, 9);rect(x + 144, y + 144, 9, 9);rect(x + 189, y + 144, 9, 9);rect(x + 198, y + 144, 9, 9);rect(x + 207, y + 144, 9, 9);rect(x + 216, y + 144, 9, 9);rect(x + 243, y + 144, 9, 9);rect(x + 270, y + 144, 9, 9);rect(x + 36, y + 216, 9, 9);rect(x + 63, y + 216, 9, 9);rect(x + 108, y + 225, 9, 9);rect(x + 144, y + 216, 9, 9);rect(x + 162, y + 216, 9, 9);rect(x + 198, y + 216, 9, 9);rect(x + 216, y + 216, 9, 9);rect(x + 252, y + 225, 9, 9);rect(x + 279, y + 216, 9, 9);rect(x + 252, y + 261, 9, 9);fill(112, 30, 0);rect(x + 279, y + 162, 9, 9);rect(x + 279, y + 45, 9, 9);rect(x + 279, y + 54, 9, 9);rect(x + 279, y + 63, 9, 9);rect(x + 261, y + 45, 9, 9);rect(x + 261, y + 36, 9, 9);rect(x + 252, y + 36, 9, 9);rect(x + 252, y + 45, 9, 9);rect(x + 243, y + 36, 9, 9);rect(x + 234, y + 36, 9, 9);rect(x + 234, y + 45, 9, 9);rect(x + 243, y + 45, 9, 9);rect(x + 243, y + 171, 9, 9);rect(x + 234, y + 171, 9, 9);rect(x + 234, y + 162, 9, 9);rect(x + 225, y + 153, 9, 9);rect(x + 216, y + 153, 9, 9);rect(x + 207, y + 153, 9, 9);rect(x + 198, y + 153, 9, 9);rect(x + 189, y + 153, 9, 9);rect(x + 198, y + 162, 9, 9);rect(x + 198, y + 171, 9, 9);rect(x + 207, y + 171, 9, 9);rect(x + 216, y + 171, 9, 9);rect(x + 225, y + 171, 9, 9);rect(x + 225, y + 162, 9, 9);rect(x + 216, y + 162, 9, 9);rect(x + 207, y + 162, 9, 9);rect(x + 243, y + 54, 9, 9);rect(x + 198, y + 54, 9, 9);rect(x + 207, y + 54, 9, 9);rect(x + 216, y + 54, 9, 9);rect(x + 198, y + 63, 9, 9);rect(x + 207, y + 63, 9, 9);rect(x + 216, y + 63, 9, 9);rect(x + 225, y + 63, 9, 9);rect(x + 225, y + 54, 9, 9);rect(x + 234, y + 54, 9, 9);rect(x + 234, y + 63, 9, 9);rect(x + 180, y + 171, 9, 9);rect(x + 180, y + 54, 9, 9);rect(x + 162, y + 36, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 153, y + 153, 9, 9);rect(x + 144, y + 153, 9, 9);rect(x + 144, y + 171, 9, 9);rect(x + 162, y + 54, 9, 9);rect(x + 153, y + 54, 9, 9);rect(x + 144, y + 54, 9, 9);rect(x + 153, y + 63, 9, 9);rect(x + 144, y + 63, 9, 9);rect(x + 135, y + 63, 9, 9);rect(x + 135, y + 54, 9, 9);rect(x + 126, y + 54, 9, 9);rect(x + 117, y + 54, 9, 9);rect(x + 108, y + 45, 9, 9);rect(x + 117, y + 45, 9, 9);rect(x + 126, y + 45, 9, 9);rect(x + 135, y + 45, 9, 9);rect(x + 99, y + 36, 9, 9);rect(x + 108, y + 36, 9, 9);rect(x + 117, y + 36, 9, 9);rect(x + 126, y + 36, 9, 9);rect(x + 99, y + 171, 9, 9);rect(x + 108, y + 171, 9, 9);rect(x + 117, y + 162, 9, 9);rect(x + 126, y + 153, 9, 9);rect(x + 81, y + 45, 9, 9);rect(x + 81, y + 36, 9, 9);rect(x + 72, y + 171, 9, 9);rect(x + 81, y + 171, 9, 9);rect(x + 72, y + 162, 9, 9);rect(x + 81, y + 162, 9, 9);rect(x + 90, y + 153, 9, 9);rect(x + 81, y + 153, 9, 9);rect(x + 72, y + 153, 9, 9);rect(x + 63, y + 153, 9, 9);rect(x + 54, y + 153, 9, 9);rect(x + 54, y + 162, 9, 9);rect(x + 63, y + 162, 9, 9);rect(x + 90, y + 54, 9, 9);rect(x + 81, y + 54, 9, 9);rect(x + 72, y + 54, 9, 9);rect(x + 72, y + 63, 9, 9);rect(x + 81, y + 63, 9, 9);rect(x + 90, y + 63, 9, 9);rect(x + 54, y + 54, 9, 9);rect(x + 36, y + 171, 9, 9);rect(x + 36, y + 36, 9, 9);rect(x + 162, y + 45, 9, 9);rect(x + 153, y + 54, 9, 9);rect(x + 162, y + 63, 9, 9);rect(x + 153, y + 63, 9, 9);rect(x + 0, y + 63, 9, 9);rect(x + 0, y + 54, 9, 9);rect(x + 0, y + 45, 9, 9);rect(x + 0, y + 36, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 279, y + 99, 9, 9);rect(x + 279, y + 108, 9, 9);rect(x + 279, y + 117, 9, 9);rect(x + 279, y + 126, 9, 9);rect(x + 279, y + 135, 9, 9);rect(x + 270, y + 135, 9, 9);rect(x + 270, y + 126, 9, 9);rect(x + 270, y + 117, 9, 9);rect(x + 261, y + 126, 9, 9);rect(x + 243, y + 99, 9, 9);rect(x + 243, y + 108, 9, 9);rect(x + 234, y + 108, 9, 9);rect(x + 234, y + 117, 9, 9);rect(x + 225, y + 117, 9, 9);rect(x + 225, y + 126, 9, 9);rect(x + 216, y + 126, 9, 9);rect(x + 207, y + 117, 9, 9);rect(x + 207, y + 126, 9, 9);rect(x + 198, y + 135, 9, 9);rect(x + 198, y + 126, 9, 9);rect(x + 189, y + 126, 9, 9);rect(x + 171, y + 126, 9, 9);rect(x + 180, y + 126, 9, 9);rect(x + 180, y + 117, 9, 9);rect(x + 180, y + 108, 9, 9);rect(x + 180, y + 99, 9, 9);rect(x + 189, y + 108, 9, 9);rect(x + 189, y + 81, 9, 9);rect(x + 189, y + 90, 9, 9);rect(x + 189, y + 99, 9, 9);rect(x + 198, y + 99, 9, 9);rect(x + 198, y + 90, 9, 9);rect(x + 198, y + 81, 9, 9);rect(x + 207, y + 90, 9, 9);rect(x + 207, y + 81, 9, 9);rect(x + 216, y + 81, 9, 9);rect(x + 225, y + 81, 9, 9);rect(x + 234, y + 81, 9, 9);rect(x + 234, y + 90, 9, 9);rect(x + 225, y + 90, 9, 9);rect(x + 216, y + 99, 9, 9);rect(x + 162, y + 99, 9, 9);rect(x + 162, y + 108, 9, 9);rect(x + 153, y + 108, 9, 9);rect(x + 153, y + 117, 9, 9);rect(x + 153, y + 135, 9, 9);rect(x + 153, y + 126, 9, 9);rect(x + 144, y + 126, 9, 9);rect(x + 135, y + 117, 9, 9);rect(x + 153, y + 99, 9, 9);rect(x + 144, y + 99, 9, 9);rect(x + 153, y + 90, 9, 9);rect(x + 144, y + 90, 9, 9);rect(x + 144, y + 81, 9, 9);rect(x + 135, y + 81, 9, 9);rect(x + 135, y + 90, 9, 9);rect(x + 126, y + 90, 9, 9);rect(x + 126, y + 81, 9, 9);rect(x + 117, y + 117, 9, 9);rect(x + 117, y + 126, 9, 9);rect(x + 99, y + 90, 9, 9);rect(x + 72, y + 90, 9, 9);rect(x + 81, y + 81, 9, 9);rect(x + 90, y + 81, 9, 9);rect(x + 81, y + 90, 9, 9);rect(x + 90, y + 90, 9, 9);rect(x + 90, y + 99, 9, 9);rect(x + 90, y + 108, 9, 9);rect(x + 90, y + 117, 9, 9);rect(x + 81, y + 135, 9, 9);rect(x + 81, y + 126, 9, 9);rect(x + 81, y + 117, 9, 9);rect(x + 81, y + 108, 9, 9);rect(x + 81, y + 99, 9, 9);rect(x + 72, y + 99, 9, 9);rect(x + 63, y + 99, 9, 9);rect(x + 54, y + 90, 9, 9);rect(x + 63, y + 108, 9, 9);rect(x + 72, y + 108, 9, 9);rect(x + 72, y + 126, 9, 9);rect(x + 63, y + 135, 9, 9);rect(x + 63, y + 126, 9, 9);rect(x + 72, y + 117, 9, 9);rect(x + 63, y + 117, 9, 9);rect(x + 54, y + 117, 9, 9);rect(x + 54, y + 108, 9, 9);rect(x + 45, y + 108, 9, 9);rect(x + 45, y + 117, 9, 9);rect(x + 36, y + 108, 9, 9);rect(x + 171, y + 108, 9, 9);rect(x + 171, y + 117, 9, 9);rect(x + 36, y + 117, 9, 9);rect(x + 0, y + 81, 9, 9);rect(x + 0, y + 90, 9, 9);rect(x + 153, y + 90, 9, 9);rect(x + 153, y + 81, 9, 9);rect(x + 162, y + 81, 9, 9);rect(x + 171, y + 81, 9, 9);rect(x + 0, y + 108, 9, 9);rect(x + 0, y + 117, 9, 9);rect(x + 0, y + 126, 9, 9);rect(x + 153, y + 126, 9, 9);rect(x + 153, y + 135, 9, 9);rect(x + 0, y + 153, 9, 9);rect(x + 153, y + 153, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 0, y + 162, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 153, y + 180, 9, 9);rect(x + 0, y + 189, 9, 9);rect(x + 0, y + 198, 9, 9);rect(x + 0, y + 207, 9, 9);rect(x + 153, y + 207, 9, 9);rect(x + 153, y + 198, 9, 9);rect(x + 36, y + 189, 9, 9);rect(x + 36, y + 180, 9, 9);rect(x + 36, y + 171, 9, 9);rect(x + 45, y + 171, 9, 9);rect(x + 45, y + 180, 9, 9);rect(x + 45, y + 189, 9, 9);rect(x + 54, y + 189, 9, 9);rect(x + 45, y + 207, 9, 9);rect(x + 45, y + 198, 9, 9);rect(x + 54, y + 198, 9, 9);rect(x + 54, y + 207, 9, 9);rect(x + 72, y + 198, 9, 9);rect(x + 81, y + 198, 9, 9);rect(x + 99, y + 198, 9, 9);rect(x + 90, y + 198, 9, 9);rect(x + 90, y + 207, 9, 9);rect(x + 81, y + 207, 9, 9);rect(x + 54, y + 153, 9, 9);rect(x + 63, y + 162, 9, 9);rect(x + 72, y + 162, 9, 9);rect(x + 81, y + 162, 9, 9);rect(x + 90, y + 162, 9, 9);rect(x + 99, y + 162, 9, 9);rect(x + 99, y + 171, 9, 9);rect(x + 90, y + 171, 9, 9);rect(x + 108, y + 180, 9, 9);rect(x + 135, y + 171, 9, 9);rect(x + 135, y + 153, 9, 9);rect(x + 144, y + 153, 9, 9);rect(x + 153, y + 153, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 144, y + 162, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 153, y + 180, 9, 9);rect(x + 162, y + 180, 9, 9);rect(x + 162, y + 189, 9, 9);rect(x + 153, y + 189, 9, 9);rect(x + 153, y + 198, 9, 9);rect(x + 153, y + 207, 9, 9);rect(x + 144, y + 207, 9, 9);rect(x + 144, y + 198, 9, 9);rect(x + 126, y + 198, 9, 9);rect(x + 117, y + 198, 9, 9);rect(x + 117, y + 207, 9, 9);rect(x + 126, y + 207, 9, 9);rect(x + 189, y + 198, 9, 9);rect(x + 198, y + 198, 9, 9);rect(x + 198, y + 189, 9, 9);rect(x + 189, y + 189, 9, 9);rect(x + 198, y + 180, 9, 9);rect(x + 198, y + 171, 9, 9);rect(x + 207, y + 171, 9, 9);rect(x + 216, y + 171, 9, 9);rect(x + 216, y + 162, 9, 9);rect(x + 207, y + 162, 9, 9);rect(x + 198, y + 207, 9, 9);rect(x + 207, y + 207, 9, 9);rect(x + 207, y + 198, 9, 9);rect(x + 216, y + 198, 9, 9);rect(x + 234, y + 198, 9, 9);rect(x + 234, y + 153, 9, 9);rect(x + 234, y + 162, 9, 9);rect(x + 243, y + 162, 9, 9);rect(x + 252, y + 162, 9, 9);rect(x + 261, y + 171, 9, 9);rect(x + 261, y + 162, 9, 9);rect(x + 279, y + 171, 9, 9);rect(x + 279, y + 162, 9, 9);rect(x + 279, y + 153, 9, 9);rect(x + 270, y + 153, 9, 9);rect(x + 270, y + 162, 9, 9);rect(x + 279, y + 189, 9, 9);rect(x + 270, y + 189, 9, 9);rect(x + 270, y + 198, 9, 9);rect(x + 270, y + 207, 9, 9);rect(x + 279, y + 207, 9, 9);rect(x + 279, y + 198, 9, 9);rect(x + 261, y + 198, 9, 9);rect(x + 252, y + 198, 9, 9);rect(x + 0, y + 225, 9, 9);rect(x + 0, y + 234, 9, 9);rect(x + 0, y + 243, 9, 9);rect(x + 153, y + 243, 9, 9);rect(x + 153, y + 234, 9, 9);rect(x + 153, y + 225, 9, 9);rect(x + 153, y + 252, 9, 9);rect(x + 162, y + 252, 9, 9);rect(x + 171, y + 252, 9, 9);rect(x + 171, y + 243, 9, 9);rect(x + 162, y + 243, 9, 9);rect(x + 162, y + 261, 9, 9);rect(x + 162, y + 270, 9, 9);rect(x + 171, y + 270, 9, 9);rect(x + 171, y + 279, 9, 9);rect(x + 36, y + 279, 9, 9);rect(x + 36, y + 243, 9, 9);rect(x + 36, y + 234, 9, 9);rect(x + 45, y + 234, 9, 9);rect(x + 45, y + 243, 9, 9);rect(x + 54, y + 234, 9, 9);rect(x + 54, y + 225, 9, 9);rect(x + 72, y + 234, 9, 9);rect(x + 72, y + 243, 9, 9);rect(x + 81, y + 243, 9, 9);rect(x + 81, y + 252, 9, 9);rect(x + 72, y + 252, 9, 9);rect(x + 90, y + 252, 9, 9);rect(x + 90, y + 261, 9, 9);rect(x + 90, y + 270, 9, 9);rect(x + 99, y + 270, 9, 9);rect(x + 72, y + 270, 9, 9);rect(x + 81, y + 279, 9, 9);rect(x + 72, y + 279, 9, 9);rect(x + 63, y + 279, 9, 9);rect(x + 54, y + 279, 9, 9);rect(x + 90, y + 225, 9, 9);rect(x + 117, y + 234, 9, 9);rect(x + 117, y + 243, 9, 9);rect(x + 126, y + 225, 9, 9);rect(x + 126, y + 234, 9, 9);rect(x + 126, y + 243, 9, 9);rect(x + 126, y + 252, 9, 9);rect(x + 135, y + 252, 9, 9);rect(x + 135, y + 243, 9, 9);rect(x + 135, y + 234, 9, 9);rect(x + 135, y + 225, 9, 9);rect(x + 144, y + 225, 9, 9);rect(x + 153, y + 225, 9, 9);rect(x + 153, y + 234, 9, 9);rect(x + 153, y + 252, 9, 9);rect(x + 153, y + 243, 9, 9);rect(x + 144, y + 243, 9, 9);rect(x + 144, y + 252, 9, 9);rect(x + 135, y + 261, 9, 9);rect(x + 144, y + 261, 9, 9);rect(x + 144, y + 270, 9, 9);rect(x + 135, y + 270, 9, 9);rect(x + 144, y + 279, 9, 9);rect(x + 153, y + 279, 9, 9);rect(x + 162, y + 279, 9, 9);rect(x + 153, y + 270, 9, 9);rect(x + 162, y + 261, 9, 9);rect(x + 171, y + 270, 9, 9);rect(x + 162, y + 243, 9, 9);rect(x + 162, y + 234, 9, 9);rect(x + 171, y + 234, 9, 9);rect(x + 180, y + 234, 9, 9);rect(x + 180, y + 243, 9, 9);rect(x + 189, y + 243, 9, 9);rect(x + 189, y + 252, 9, 9);rect(x + 198, y + 225, 9, 9);rect(x + 207, y + 234, 9, 9);rect(x + 216, y + 234, 9, 9);rect(x + 225, y + 234, 9, 9);rect(x + 225, y + 243, 9, 9);rect(x + 216, y + 243, 9, 9);rect(x + 207, y + 243, 9, 9);rect(x + 207, y + 252, 9, 9);rect(x + 216, y + 252, 9, 9);rect(x + 225, y + 252, 9, 9);rect(x + 234, y + 243, 9, 9);rect(x + 243, y + 243, 9, 9);rect(x + 207, y + 261, 9, 9);rect(x + 207, y + 270, 9, 9);rect(x + 198, y + 270, 9, 9);rect(x + 189, y + 279, 9, 9);rect(x + 198, y + 279, 9, 9);rect(x + 207, y + 279, 9, 9);rect(x + 216, y + 279, 9, 9);rect(x + 225, y + 279, 9, 9);rect(x + 234, y + 270, 9, 9);rect(x + 243, y + 270, 9, 9);rect(x + 270, y + 279, 9, 9);rect(x + 270, y + 270, 9, 9);rect(x + 279, y + 279, 9, 9);rect(x + 279, y + 270, 9, 9);rect(x + 279, y + 261, 9, 9);rect(x + 279, y + 243, 9, 9);rect(x + 279, y + 234, 9, 9);rect(x + 279, y + 225, 9, 9);rect(x + 270, y + 225, 9, 9);rect(x + 270, y + 234, 9, 9);fill(97, 26, 0);rect(x + 45, y + 153, 9, 9);rect(x + 0, y + 171, 9, 9);rect(x + 153, y + 36, 9, 9);rect(x + 153, y + 45, 9, 9);rect(x + 162, y + 54, 9, 9);rect(x + 72, y + 36, 9, 9);rect(x + 117, y + 171, 9, 9);rect(x + 126, y + 171, 9, 9);rect(x + 135, y + 153, 9, 9);rect(x + 135, y + 162, 9, 9);rect(x + 144, y + 162, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 144, y + 45, 9, 9);rect(x + 126, y + 63, 9, 9);rect(x + 117, y + 63, 9, 9);rect(x + 216, y + 45, 9, 9);rect(x + 225, y + 45, 9, 9);rect(x + 225, y + 36, 9, 9);rect(x + 243, y + 162, 9, 9);rect(x + 279, y + 153, 9, 9);rect(x + 270, y + 153, 9, 9);rect(x + 279, y + 36, 9, 9);rect(x + 252, y + 54, 9, 9);rect(x + 252, y + 63, 9, 9);rect(x + 243, y + 81, 9, 9);rect(x + 261, y + 81, 9, 9);rect(x + 270, y + 108, 9, 9);rect(x + 234, y + 99, 9, 9);rect(x + 216, y + 90, 9, 9);rect(x + 207, y + 99, 9, 9);rect(x + 207, y + 108, 9, 9);rect(x + 198, y + 108, 9, 9);rect(x + 216, y + 117, 9, 9);rect(x + 72, y + 81, 9, 9);rect(x + 54, y + 99, 9, 9);rect(x + 36, y + 99, 9, 9);rect(x + 162, y + 90, 9, 9);rect(x + 0, y + 99, 9, 9);rect(x + 99, y + 99, 9, 9);rect(x + 45, y + 126, 9, 9);rect(x + 36, y + 135, 9, 9);rect(x + 99, y + 135, 9, 9);rect(x + 135, y + 126, 9, 9);rect(x + 171, y + 135, 9, 9);rect(x + 243, y + 135, 9, 9);rect(x + 270, y + 180, 9, 9);rect(x + 252, y + 171, 9, 9);rect(x + 243, y + 171, 9, 9);rect(x + 234, y + 171, 9, 9);rect(x + 216, y + 180, 9, 9);rect(x + 207, y + 153, 9, 9);rect(x + 198, y + 153, 9, 9);rect(x + 198, y + 162, 9, 9);rect(x + 189, y + 171, 9, 9);rect(x + 189, y + 180, 9, 9);rect(x + 117, y + 153, 9, 9);rect(x + 108, y + 162, 9, 9);rect(x + 144, y + 189, 9, 9);rect(x + 99, y + 189, 9, 9);rect(x + 81, y + 189, 9, 9);rect(x + 81, y + 171, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 0, y + 171, 9, 9);rect(x + 162, y + 180, 9, 9);rect(x + 36, y + 198, 9, 9);rect(x + 45, y + 225, 9, 9);rect(x + 171, y + 225, 9, 9);rect(x + 162, y + 234, 9, 9);rect(x + 171, y + 261, 9, 9);rect(x + 0, y + 279, 9, 9);rect(x + 45, y + 252, 9, 9);rect(x + 63, y + 252, 9, 9);rect(x + 63, y + 270, 9, 9);rect(x + 81, y + 234, 9, 9);rect(x + 135, y + 207, 9, 9);rect(x + 162, y + 207, 9, 9);rect(x + 216, y + 207, 9, 9);rect(x + 207, y + 225, 9, 9);rect(x + 279, y + 252, 9, 9);rect(x + 270, y + 252, 9, 9);rect(x + 234, y + 279, 9, 9);rect(x + 234, y + 261, 9, 9);rect(x + 180, y + 252, 9, 9);rect(x + 171, y + 243, 9, 9);rect(x + 162, y + 270, 9, 9);rect(x + 135, y + 279, 9, 9);rect(x + 126, y + 261, 9, 9);fill(127, 34, 0);rect(x + 162, y + 279, 9, 9);rect(x + 153, y + 279, 9, 9);rect(x + 153, y + 270, 9, 9);rect(x + 153, y + 261, 9, 9);rect(x + 0, y + 252, 9, 9);rect(x + 36, y + 252, 9, 9);rect(x + 63, y + 261, 9, 9);rect(x + 81, y + 261, 9, 9);rect(x + 81, y + 270, 9, 9);rect(x + 117, y + 261, 9, 9);rect(x + 126, y + 279, 9, 9);rect(x + 171, y + 261, 9, 9);rect(x + 180, y + 261, 9, 9);rect(x + 162, y + 252, 9, 9);rect(x + 144, y + 234, 9, 9);rect(x + 90, y + 234, 9, 9);rect(x + 81, y + 225, 9, 9);rect(x + 225, y + 261, 9, 9);rect(x + 234, y + 252, 9, 9);rect(x + 243, y + 252, 9, 9);rect(x + 243, y + 234, 9, 9);rect(x + 225, y + 225, 9, 9);rect(x + 216, y + 225, 9, 9);rect(x + 270, y + 261, 9, 9);rect(x + 234, y + 207, 9, 9);rect(x + 261, y + 180, 9, 9);rect(x + 252, y + 180, 9, 9);rect(x + 243, y + 180, 9, 9);rect(x + 270, y + 171, 9, 9);rect(x + 225, y + 189, 9, 9);rect(x + 207, y + 189, 9, 9);rect(x + 180, y + 180, 9, 9);rect(x + 135, y + 180, 9, 9);rect(x + 135, y + 189, 9, 9);rect(x + 126, y + 180, 9, 9);rect(x + 126, y + 171, 9, 9);rect(x + 99, y + 180, 9, 9);rect(x + 90, y + 180, 9, 9);rect(x + 90, y + 189, 9, 9);rect(x + 72, y + 180, 9, 9);rect(x + 162, y + 189, 9, 9);rect(x + 162, y + 198, 9, 9);rect(x + 0, y + 135, 9, 9);rect(x + 72, y + 135, 9, 9);rect(x + 72, y + 153, 9, 9);rect(x + 90, y + 153, 9, 9);rect(x + 144, y + 135, 9, 9);rect(x + 189, y + 162, 9, 9);rect(x + 180, y + 162, 9, 9);rect(x + 189, y + 117, 9, 9);rect(x + 216, y + 108, 9, 9);rect(x + 225, y + 99, 9, 9);rect(x + 126, y + 99, 9, 9);rect(x + 63, y + 81, 9, 9);rect(x + 54, y + 81, 9, 9);rect(x + 45, y + 90, 9, 9);rect(x + 153, y + 108, 9, 9);rect(x + 36, y + 63, 9, 9);rect(x + 45, y + 63, 9, 9);rect(x + 45, y + 54, 9, 9);rect(x + 54, y + 45, 9, 9);rect(x + 162, y + 36, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 117, y + 153, 9, 9);rect(x + 126, y + 162, 9, 9);rect(x + 144, y + 36, 9, 9);rect(x + 162, y + 45, 9, 9);rect(x + 198, y + 45, 9, 9);rect(x + 216, y + 36, 9, 9);rect(x + 279, y + 171, 9, 9);rect(x + 261, y + 153, 9, 9);fill(37, 70, 9);rect(x + 36, y + 270, 9, 9);rect(x + 45, y + 261, 9, 9);rect(x + 54, y + 252, 9, 9);rect(x + 63, y + 234, 9, 9);rect(x + 99, y + 252, 9, 9);rect(x + 198, y + 252, 9, 9);rect(x + 189, y + 234, 9, 9);rect(x + 234, y + 189, 9, 9);rect(x + 234, y + 180, 9, 9);rect(x + 117, y + 180, 9, 9);rect(x + 117, y + 171, 9, 9);rect(x + 63, y + 189, 9, 9);rect(x + 54, y + 171, 9, 9);rect(x + 162, y + 126, 9, 9);rect(x + 162, y + 108, 9, 9);rect(x + 36, y + 90, 9, 9);rect(x + 72, y + 45, 9, 9);rect(x + 63, y + 36, 9, 9);rect(x + 54, y + 36, 9, 9);rect(x + 45, y + 171, 9, 9);rect(x + 90, y + 171, 9, 9);rect(x + 99, y + 45, 9, 9);rect(x + 126, y + 108, 9, 9);rect(x + 126, y + 126, 9, 9);rect(x + 171, y + 108, 9, 9);rect(x + 171, y + 99, 9, 9);rect(x + 270, y + 99, 9, 9);rect(x + 270, y + 45, 9, 9);rect(x + 261, y + 171, 9, 9);rect(x + 252, y + 162, 9, 9);rect(x + 243, y + 153, 9, 9);rect(x + 189, y + 171, 9, 9);rect(x + 180, y + 162, 9, 9);fill(15, 5, 2);rect(x + 171, y + 216, 9, 9);fill(0, 0, 0);rect(x + 108, y + 216, 9, 9);rect(x + 171, y + 216, 9, 9);rect(x + 252, y + 144, 9, 9);rect(x + 171, y + 72, 9, 9);rect(x + 171, y + 72, 9, 9);rect(x + 171, y + 0, 9, 9);fill(142, 38, 0);rect(x + 216, y + 261, 9, 9);rect(x + 234, y + 234, 9, 9);rect(x + 216, y + 189, 9, 9);rect(x + 162, y + 198, 9, 9);rect(x + 144, y + 180, 9, 9);rect(x + 81, y + 180, 9, 9);rect(x + 153, y + 189, 9, 9);rect(x + 0, y + 180, 9, 9);rect(x + 54, y + 135, 9, 9);rect(x + 36, y + 126, 9, 9);rect(x + 144, y + 117, 9, 9);rect(x + 135, y + 108, 9, 9);rect(x + 198, y + 117, 9, 9);rect(x + 207, y + 135, 9, 9);rect(x + 189, y + 153, 9, 9);rect(x + 279, y + 81, 9, 9);rect(x + 270, y + 162, 9, 9);rect(x + 207, y + 36, 9, 9);rect(x + 198, y + 36, 9, 9);rect(x + 180, y + 36, 9, 9);rect(x + 153, y + 36, 9, 9);rect(x + 135, y + 171, 9, 9);rect(x + 45, y + 45, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 153, y + 153, 9, 9);fill(82, 22, 0);rect(x + 36, y + 261, 9, 9);rect(x + 54, y + 270, 9, 9);rect(x + 72, y + 261, 9, 9);rect(x + 90, y + 279, 9, 9);rect(x + 90, y + 243, 9, 9);rect(x + 171, y + 234, 9, 9);rect(x + 36, y + 225, 9, 9);rect(x + 162, y + 207, 9, 9);rect(x + 126, y + 270, 9, 9);rect(x + 153, y + 261, 9, 9);rect(x + 171, y + 252, 9, 9);rect(x + 216, y + 270, 9, 9);rect(x + 225, y + 270, 9, 9);rect(x + 243, y + 261, 9, 9);rect(x + 261, y + 207, 9, 9);rect(x + 261, y + 189, 9, 9);rect(x + 279, y + 180, 9, 9);rect(x + 225, y + 198, 9, 9);rect(x + 225, y + 207, 9, 9);rect(x + 207, y + 180, 9, 9);rect(x + 135, y + 198, 9, 9);rect(x + 108, y + 171, 9, 9);rect(x + 108, y + 153, 9, 9);rect(x + 135, y + 162, 9, 9);rect(x + 72, y + 171, 9, 9);rect(x + 63, y + 171, 9, 9);rect(x + 63, y + 153, 9, 9);rect(x + 81, y + 153, 9, 9);rect(x + 36, y + 162, 9, 9);rect(x + 162, y + 153, 9, 9);rect(x + 243, y + 153, 9, 9);rect(x + 261, y + 153, 9, 9);rect(x + 117, y + 135, 9, 9);rect(x + 90, y + 135, 9, 9);rect(x + 90, y + 126, 9, 9);rect(x + 99, y + 126, 9, 9);rect(x + 99, y + 108, 9, 9);rect(x + 45, y + 135, 9, 9);rect(x + 171, y + 126, 9, 9);rect(x + 45, y + 99, 9, 9);rect(x + 63, y + 90, 9, 9);rect(x + 153, y + 99, 9, 9);rect(x + 135, y + 99, 9, 9);rect(x + 117, y + 81, 9, 9);rect(x + 99, y + 81, 9, 9);rect(x + 153, y + 81, 9, 9);rect(x + 162, y + 81, 9, 9);rect(x + 180, y + 135, 9, 9);rect(x + 189, y + 135, 9, 9);rect(x + 216, y + 135, 9, 9);rect(x + 225, y + 108, 9, 9);rect(x + 261, y + 117, 9, 9);rect(x + 261, y + 90, 9, 9);rect(x + 243, y + 63, 9, 9);rect(x + 207, y + 45, 9, 9);rect(x + 252, y + 171, 9, 9);rect(x + 153, y + 45, 9, 9);rect(x + 135, y + 36, 9, 9);rect(x + 108, y + 162, 9, 9);rect(x + 162, y + 153, 9, 9);rect(x + 0, y + 162, 9, 9);rect(x + 45, y + 36, 9, 9);rect(x + 36, y + 45, 9, 9);rect(x + 36, y + 54, 9, 9);rect(x + 180, y + 63, 9, 9);fill(30, 56, 7);rect(x + 54, y + 261, 9, 9);rect(x + 45, y + 270, 9, 9);rect(x + 54, y + 243, 9, 9);rect(x + 63, y + 243, 9, 9);rect(x + 99, y + 243, 9, 9);rect(x + 99, y + 225, 9, 9);rect(x + 99, y + 261, 9, 9);rect(x + 117, y + 270, 9, 9);rect(x + 189, y + 261, 9, 9);rect(x + 198, y + 261, 9, 9);rect(x + 198, y + 243, 9, 9);rect(x + 198, y + 234, 9, 9);rect(x + 261, y + 261, 9, 9);rect(x + 261, y + 243, 9, 9);rect(x + 270, y + 243, 9, 9);rect(x + 261, y + 225, 9, 9);rect(x + 243, y + 207, 9, 9);rect(x + 252, y + 189, 9, 9);rect(x + 243, y + 189, 9, 9);rect(x + 189, y + 207, 9, 9);rect(x + 180, y + 189, 9, 9);rect(x + 171, y + 180, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 126, y + 162, 9, 9);rect(x + 117, y + 162, 9, 9);rect(x + 117, y + 189, 9, 9);rect(x + 108, y + 198, 9, 9);rect(x + 63, y + 198, 9, 9);rect(x + 72, y + 189, 9, 9);rect(x + 63, y + 180, 9, 9);rect(x + 54, y + 180, 9, 9);rect(x + 54, y + 162, 9, 9);rect(x + 45, y + 162, 9, 9);rect(x + 162, y + 117, 9, 9);rect(x + 153, y + 117, 9, 9);rect(x + 162, y + 99, 9, 9);rect(x + 171, y + 99, 9, 9);rect(x + 171, y + 90, 9, 9);rect(x + 36, y + 81, 9, 9);rect(x + 63, y + 54, 9, 9);rect(x + 63, y + 45, 9, 9);rect(x + 54, y + 171, 9, 9);rect(x + 45, y + 162, 9, 9);rect(x + 36, y + 162, 9, 9);rect(x + 90, y + 162, 9, 9);rect(x + 99, y + 162, 9, 9);rect(x + 90, y + 36, 9, 9);rect(x + 90, y + 45, 9, 9);rect(x + 99, y + 54, 9, 9);rect(x + 108, y + 54, 9, 9);rect(x + 117, y + 90, 9, 9);rect(x + 117, y + 108, 9, 9);rect(x + 126, y + 117, 9, 9);rect(x + 162, y + 117, 9, 9);rect(x + 171, y + 117, 9, 9);rect(x + 171, y + 90, 9, 9);rect(x + 180, y + 81, 9, 9);rect(x + 189, y + 54, 9, 9);rect(x + 189, y + 45, 9, 9);rect(x + 189, y + 36, 9, 9);rect(x + 180, y + 45, 9, 9);rect(x + 189, y + 162, 9, 9);rect(x + 180, y + 153, 9, 9);rect(x + 252, y + 153, 9, 9);rect(x + 261, y + 162, 9, 9);rect(x + 270, y + 171, 9, 9);rect(x + 270, y + 36, 9, 9);rect(x + 270, y + 81, 9, 9);rect(x + 270, y + 90, 9, 9);rect(x + 279, y + 90, 9, 9);rect(x + 261, y + 99, 9, 9);rect(x + 261, y + 108, 9, 9);rect(x + 243, y + 117, 9, 9);fill(44, 14, 5);rect(x + 108, y + 243, 9, 9);rect(x + 117, y + 216, 9, 9);rect(x + 126, y + 216, 9, 9);rect(x + 135, y + 216, 9, 9);rect(x + 90, y + 216, 9, 9);rect(x + 45, y + 216, 9, 9);rect(x + 171, y + 207, 9, 9);rect(x + 171, y + 189, 9, 9);rect(x + 153, y + 216, 9, 9);rect(x + 0, y + 216, 9, 9);rect(x + 180, y + 216, 9, 9);rect(x + 171, y + 198, 9, 9);rect(x + 234, y + 216, 9, 9);rect(x + 270, y + 216, 9, 9);rect(x + 252, y + 243, 9, 9);rect(x + 252, y + 252, 9, 9);rect(x + 171, y + 153, 9, 9);rect(x + 0, y + 144, 9, 9);rect(x + 54, y + 144, 9, 9);rect(x + 63, y + 144, 9, 9);rect(x + 72, y + 144, 9, 9);rect(x + 90, y + 144, 9, 9);rect(x + 117, y + 144, 9, 9);rect(x + 135, y + 144, 9, 9);rect(x + 108, y + 135, 9, 9);rect(x + 108, y + 126, 9, 9);rect(x + 108, y + 99, 9, 9);rect(x + 81, y + 72, 9, 9);rect(x + 72, y + 72, 9, 9);rect(x + 36, y + 72, 9, 9);rect(x + 171, y + 63, 9, 9);rect(x + 162, y + 72, 9, 9);rect(x + 0, y + 72, 9, 9);rect(x + 171, y + 45, 9, 9);rect(x + 171, y + 171, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 153, y + 0, 9, 9);rect(x + 0, y + 0, 9, 9);rect(x + 81, y + 0, 9, 9);rect(x + 90, y + 0, 9, 9);rect(x + 126, y + 0, 9, 9);rect(x + 153, y + 0, 9, 9);rect(x + 180, y + 0, 9, 9);rect(x + 198, y + 0, 9, 9);rect(x + 216, y + 0, 9, 9);rect(x + 225, y + 0, 9, 9);rect(x + 234, y + 0, 9, 9);rect(x + 261, y + 0, 9, 9);rect(x + 270, y + 0, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 171, y + 171, 9, 9);rect(x + 171, y + 36, 9, 9);rect(x + 171, y + 54, 9, 9);rect(x + 162, y + 72, 9, 9);rect(x + 144, y + 72, 9, 9);rect(x + 243, y + 72, 9, 9);rect(x + 252, y + 99, 9, 9);rect(x + 261, y + 144, 9, 9);rect(x + 234, y + 144, 9, 9);rect(x + 180, y + 144, 9, 9);rect(x + 171, y + 153, 9, 9);fill(23, 42, 5);rect(x + 45, y + 279, 9, 9);rect(x + 117, y + 279, 9, 9);rect(x + 108, y + 261, 9, 9);rect(x + 180, y + 270, 9, 9);rect(x + 189, y + 270, 9, 9);rect(x + 243, y + 279, 9, 9);rect(x + 252, y + 270, 9, 9);rect(x + 261, y + 270, 9, 9);rect(x + 261, y + 252, 9, 9);rect(x + 261, y + 234, 9, 9);rect(x + 261, y + 216, 9, 9);rect(x + 252, y + 216, 9, 9);rect(x + 243, y + 198, 9, 9);rect(x + 189, y + 216, 9, 9);rect(x + 180, y + 225, 9, 9);rect(x + 180, y + 198, 9, 9);rect(x + 171, y + 189, 9, 9);rect(x + 108, y + 207, 9, 9);rect(x + 99, y + 207, 9, 9);rect(x + 108, y + 189, 9, 9);rect(x + 99, y + 234, 9, 9);rect(x + 72, y + 225, 9, 9);rect(x + 63, y + 225, 9, 9);rect(x + 63, y + 207, 9, 9);rect(x + 72, y + 207, 9, 9);rect(x + 36, y + 144, 9, 9);rect(x + 36, y + 153, 9, 9);rect(x + 171, y + 135, 9, 9);rect(x + 162, y + 135, 9, 9);rect(x + 126, y + 153, 9, 9);rect(x + 126, y + 135, 9, 9);rect(x + 135, y + 135, 9, 9);rect(x + 153, y + 144, 9, 9);rect(x + 162, y + 144, 9, 9);rect(x + 162, y + 153, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 180, y + 171, 9, 9);rect(x + 162, y + 126, 9, 9);rect(x + 225, y + 180, 9, 9);rect(x + 225, y + 162, 9, 9);rect(x + 216, y + 153, 9, 9);rect(x + 225, y + 144, 9, 9);rect(x + 243, y + 126, 9, 9);rect(x + 252, y + 108, 9, 9);rect(x + 270, y + 72, 9, 9);rect(x + 270, y + 54, 9, 9);rect(x + 261, y + 54, 9, 9);rect(x + 189, y + 72, 9, 9);rect(x + 180, y + 72, 9, 9);rect(x + 180, y + 90, 9, 9);rect(x + 108, y + 108, 9, 9);rect(x + 108, y + 90, 9, 9);rect(x + 108, y + 81, 9, 9);rect(x + 99, y + 72, 9, 9);rect(x + 99, y + 63, 9, 9);rect(x + 63, y + 63, 9, 9);rect(x + 63, y + 72, 9, 9);rect(x + 45, y + 72, 9, 9);rect(x + 45, y + 81, 9, 9);rect(x + 36, y + 153, 9, 9);rect(x + 99, y + 153, 9, 9);rect(x + 108, y + 153, 9, 9);rect(x + 171, y + 0, 9, 9);rect(x + 171, y + 153, 9, 9);fill(67, 18, 0);rect(x + 0, y + 270, 9, 9);rect(x + 99, y + 279, 9, 9);rect(x + 117, y + 252, 9, 9);rect(x + 162, y + 225, 9, 9);rect(x + 261, y + 279, 9, 9);rect(x + 234, y + 225, 9, 9);rect(x + 243, y + 225, 9, 9);rect(x + 171, y + 225, 9, 9);rect(x + 126, y + 189, 9, 9);rect(x + 144, y + 171, 9, 9);rect(x + 180, y + 153, 9, 9);rect(x + 261, y + 135, 9, 9);rect(x + 99, y + 153, 9, 9);rect(x + 54, y + 126, 9, 9);rect(x + 144, y + 108, 9, 9);rect(x + 162, y + 90, 9, 9);rect(x + 171, y + 81, 9, 9);rect(x + 162, y + 63, 9, 9);rect(x + 234, y + 153, 9, 9);rect(x + 108, y + 63, 9, 9);rect(x + 54, y + 63, 9, 9);rect(x + 0, y + 153, 9, 9);fill(157, 42, 0);rect(x + 0, y + 261, 9, 9);fill(113, 30, 0);rect(x + 243, y + 90, 9, 9);fill(2, 1, 0);rect(x + 108, y + 144, 9, 9);rect(x + 108, y + 279, 9, 9);rect(x + 171, y + 144, 9, 9);rect(x + 108, y + 117, 9, 9);rect(x + 117, y + 72, 9, 9);rect(x + 252, y + 72, 9, 9);fill(30, 10, 3);rect(x + 162, y + 216, 9, 9);rect(x + 171, y + 198, 9, 9);rect(x + 54, y + 216, 9, 9);rect(x + 81, y + 216, 9, 9);rect(x + 108, y + 252, 9, 9);rect(x + 153, y + 216, 9, 9);rect(x + 171, y + 207, 9, 9);rect(x + 207, y + 216, 9, 9);rect(x + 225, y + 216, 9, 9);rect(x + 243, y + 216, 9, 9);rect(x + 252, y + 234, 9, 9);rect(x + 279, y + 144, 9, 9);rect(x + 252, y + 135, 9, 9);rect(x + 252, y + 126, 9, 9);rect(x + 252, y + 90, 9, 9);rect(x + 171, y + 63, 9, 9);rect(x + 171, y + 45, 9, 9);rect(x + 81, y + 144, 9, 9);rect(x + 162, y + 144, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 90, y + 72, 9, 9);rect(x + 171, y + 36, 9, 9);rect(x + 171, y + 153, 9, 9);fill(37, 10, 0);rect(x + 36, y + 207, 9, 9);rect(x + 117, y + 225, 9, 9);fill(16, 27, 4);rect(x + 171, y + 279, 9, 9);rect(x + 180, y + 279, 9, 9);rect(x + 189, y + 63, 9, 9);rect(x + 117, y + 0, 9, 9);rect(x + 108, y + 0, 9, 9);fill(0, 46, 0);rect(x + 171, y + 171, 9, 9);fill(15, 28, 3);rect(x + 108, y + 270, 9, 9);rect(x + 108, y + 234, 9, 9);rect(x + 72, y + 216, 9, 9);rect(x + 189, y + 225, 9, 9);rect(x + 180, y + 207, 9, 9);rect(x + 252, y + 279, 9, 9);rect(x + 252, y + 207, 9, 9);rect(x + 225, y + 171, 9, 9);rect(x + 225, y + 153, 9, 9);rect(x + 225, y + 135, 9, 9);rect(x + 234, y + 135, 9, 9);rect(x + 234, y + 126, 9, 9);rect(x + 270, y + 63, 9, 9);rect(x + 162, y + 135, 9, 9);rect(x + 126, y + 144, 9, 9);rect(x + 45, y + 153, 9, 9);rect(x + 171, y + 144, 9, 9);rect(x + 108, y + 72, 9, 9);rect(x + 54, y + 72, 9, 9);rect(x + 36, y + 0, 9, 9);fill(16, 5, 2);rect(x + 45, y + 144, 9, 9);rect(x + 171, y + 54, 9, 9);rect(x + 162, y + 0, 9, 9);rect(x + 279, y + 72, 9, 9);fill(72, 23, 8);rect(x + 171, y + 171, 9, 9);rect(x + 162, y + 0, 9, 9);fill(52, 14, 0);rect(x + 99, y + 117, 9, 9);rect(x + 252, y + 153, 9, 9);rect(x + 261, y + 63, 9, 9);fill(53, 14, 0);rect(x + 162, y + 153, 9, 9);fill(23, 41, 5);rect(x + 117, y + 99, 9, 9);fill(24, 40, 6);rect(x + 252, y + 117, 9, 9);rect(x + 99, y + 216, 9, 9);fill(22, 42, 4);rect(x + 45, y + 0, 9, 9);rect(x + 243, y + 0, 9, 9);fill(127, 34, 0);rect(x + 63, y + 171, 9, 9);fill(82, 22, 0);rect(x + 162, y + 225, 9, 9);
    }
  }
  size(1000,800);
  DrawPlayer();
  Restart();
  for(Enemy e : enemies){
      e.Show();
  }
  paused = true;
  Pause(false, true);
}

void draw(){
  if(!paused){
    for(int x = -40; x < 1000; x+=225){
      for(int y = -40; y < 780; y+=225){
        fill(58, 19, 6);rect(x + 279, y + 0, 9, 9);rect(x + 252, y + 0, 9, 9);rect(x + 207, y + 0, 9, 9);rect(x + 189, y + 0, 9, 9);rect(x + 144, y + 0, 9, 9);rect(x + 135, y + 0, 9, 9);rect(x + 99, y + 0, 9, 9);rect(x + 72, y + 0, 9, 9);rect(x + 63, y + 0, 9, 9);rect(x + 54, y + 0, 9, 9);rect(x + 153, y + 72, 9, 9);rect(x + 135, y + 72, 9, 9);rect(x + 126, y + 72, 9, 9);rect(x + 153, y + 72, 9, 9);rect(x + 198, y + 72, 9, 9);rect(x + 207, y + 72, 9, 9);rect(x + 216, y + 72, 9, 9);rect(x + 225, y + 72, 9, 9);rect(x + 234, y + 72, 9, 9);rect(x + 261, y + 72, 9, 9);rect(x + 252, y + 81, 9, 9);rect(x + 153, y + 144, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 171, y + 180, 9, 9);rect(x + 99, y + 144, 9, 9);rect(x + 144, y + 144, 9, 9);rect(x + 189, y + 144, 9, 9);rect(x + 198, y + 144, 9, 9);rect(x + 207, y + 144, 9, 9);rect(x + 216, y + 144, 9, 9);rect(x + 243, y + 144, 9, 9);rect(x + 270, y + 144, 9, 9);rect(x + 36, y + 216, 9, 9);rect(x + 63, y + 216, 9, 9);rect(x + 108, y + 225, 9, 9);rect(x + 144, y + 216, 9, 9);rect(x + 162, y + 216, 9, 9);rect(x + 198, y + 216, 9, 9);rect(x + 216, y + 216, 9, 9);rect(x + 252, y + 225, 9, 9);rect(x + 279, y + 216, 9, 9);rect(x + 252, y + 261, 9, 9);fill(112, 30, 0);rect(x + 279, y + 162, 9, 9);rect(x + 279, y + 45, 9, 9);rect(x + 279, y + 54, 9, 9);rect(x + 279, y + 63, 9, 9);rect(x + 261, y + 45, 9, 9);rect(x + 261, y + 36, 9, 9);rect(x + 252, y + 36, 9, 9);rect(x + 252, y + 45, 9, 9);rect(x + 243, y + 36, 9, 9);rect(x + 234, y + 36, 9, 9);rect(x + 234, y + 45, 9, 9);rect(x + 243, y + 45, 9, 9);rect(x + 243, y + 171, 9, 9);rect(x + 234, y + 171, 9, 9);rect(x + 234, y + 162, 9, 9);rect(x + 225, y + 153, 9, 9);rect(x + 216, y + 153, 9, 9);rect(x + 207, y + 153, 9, 9);rect(x + 198, y + 153, 9, 9);rect(x + 189, y + 153, 9, 9);rect(x + 198, y + 162, 9, 9);rect(x + 198, y + 171, 9, 9);rect(x + 207, y + 171, 9, 9);rect(x + 216, y + 171, 9, 9);rect(x + 225, y + 171, 9, 9);rect(x + 225, y + 162, 9, 9);rect(x + 216, y + 162, 9, 9);rect(x + 207, y + 162, 9, 9);rect(x + 243, y + 54, 9, 9);rect(x + 198, y + 54, 9, 9);rect(x + 207, y + 54, 9, 9);rect(x + 216, y + 54, 9, 9);rect(x + 198, y + 63, 9, 9);rect(x + 207, y + 63, 9, 9);rect(x + 216, y + 63, 9, 9);rect(x + 225, y + 63, 9, 9);rect(x + 225, y + 54, 9, 9);rect(x + 234, y + 54, 9, 9);rect(x + 234, y + 63, 9, 9);rect(x + 180, y + 171, 9, 9);rect(x + 180, y + 54, 9, 9);rect(x + 162, y + 36, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 153, y + 153, 9, 9);rect(x + 144, y + 153, 9, 9);rect(x + 144, y + 171, 9, 9);rect(x + 162, y + 54, 9, 9);rect(x + 153, y + 54, 9, 9);rect(x + 144, y + 54, 9, 9);rect(x + 153, y + 63, 9, 9);rect(x + 144, y + 63, 9, 9);rect(x + 135, y + 63, 9, 9);rect(x + 135, y + 54, 9, 9);rect(x + 126, y + 54, 9, 9);rect(x + 117, y + 54, 9, 9);rect(x + 108, y + 45, 9, 9);rect(x + 117, y + 45, 9, 9);rect(x + 126, y + 45, 9, 9);rect(x + 135, y + 45, 9, 9);rect(x + 99, y + 36, 9, 9);rect(x + 108, y + 36, 9, 9);rect(x + 117, y + 36, 9, 9);rect(x + 126, y + 36, 9, 9);rect(x + 99, y + 171, 9, 9);rect(x + 108, y + 171, 9, 9);rect(x + 117, y + 162, 9, 9);rect(x + 126, y + 153, 9, 9);rect(x + 81, y + 45, 9, 9);rect(x + 81, y + 36, 9, 9);rect(x + 72, y + 171, 9, 9);rect(x + 81, y + 171, 9, 9);rect(x + 72, y + 162, 9, 9);rect(x + 81, y + 162, 9, 9);rect(x + 90, y + 153, 9, 9);rect(x + 81, y + 153, 9, 9);rect(x + 72, y + 153, 9, 9);rect(x + 63, y + 153, 9, 9);rect(x + 54, y + 153, 9, 9);rect(x + 54, y + 162, 9, 9);rect(x + 63, y + 162, 9, 9);rect(x + 90, y + 54, 9, 9);rect(x + 81, y + 54, 9, 9);rect(x + 72, y + 54, 9, 9);rect(x + 72, y + 63, 9, 9);rect(x + 81, y + 63, 9, 9);rect(x + 90, y + 63, 9, 9);rect(x + 54, y + 54, 9, 9);rect(x + 36, y + 171, 9, 9);rect(x + 36, y + 36, 9, 9);rect(x + 162, y + 45, 9, 9);rect(x + 153, y + 54, 9, 9);rect(x + 162, y + 63, 9, 9);rect(x + 153, y + 63, 9, 9);rect(x + 0, y + 63, 9, 9);rect(x + 0, y + 54, 9, 9);rect(x + 0, y + 45, 9, 9);rect(x + 0, y + 36, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 279, y + 99, 9, 9);rect(x + 279, y + 108, 9, 9);rect(x + 279, y + 117, 9, 9);rect(x + 279, y + 126, 9, 9);rect(x + 279, y + 135, 9, 9);rect(x + 270, y + 135, 9, 9);rect(x + 270, y + 126, 9, 9);rect(x + 270, y + 117, 9, 9);rect(x + 261, y + 126, 9, 9);rect(x + 243, y + 99, 9, 9);rect(x + 243, y + 108, 9, 9);rect(x + 234, y + 108, 9, 9);rect(x + 234, y + 117, 9, 9);rect(x + 225, y + 117, 9, 9);rect(x + 225, y + 126, 9, 9);rect(x + 216, y + 126, 9, 9);rect(x + 207, y + 117, 9, 9);rect(x + 207, y + 126, 9, 9);rect(x + 198, y + 135, 9, 9);rect(x + 198, y + 126, 9, 9);rect(x + 189, y + 126, 9, 9);rect(x + 171, y + 126, 9, 9);rect(x + 180, y + 126, 9, 9);rect(x + 180, y + 117, 9, 9);rect(x + 180, y + 108, 9, 9);rect(x + 180, y + 99, 9, 9);rect(x + 189, y + 108, 9, 9);rect(x + 189, y + 81, 9, 9);rect(x + 189, y + 90, 9, 9);rect(x + 189, y + 99, 9, 9);rect(x + 198, y + 99, 9, 9);rect(x + 198, y + 90, 9, 9);rect(x + 198, y + 81, 9, 9);rect(x + 207, y + 90, 9, 9);rect(x + 207, y + 81, 9, 9);rect(x + 216, y + 81, 9, 9);rect(x + 225, y + 81, 9, 9);rect(x + 234, y + 81, 9, 9);rect(x + 234, y + 90, 9, 9);rect(x + 225, y + 90, 9, 9);rect(x + 216, y + 99, 9, 9);rect(x + 162, y + 99, 9, 9);rect(x + 162, y + 108, 9, 9);rect(x + 153, y + 108, 9, 9);rect(x + 153, y + 117, 9, 9);rect(x + 153, y + 135, 9, 9);rect(x + 153, y + 126, 9, 9);rect(x + 144, y + 126, 9, 9);rect(x + 135, y + 117, 9, 9);rect(x + 153, y + 99, 9, 9);rect(x + 144, y + 99, 9, 9);rect(x + 153, y + 90, 9, 9);rect(x + 144, y + 90, 9, 9);rect(x + 144, y + 81, 9, 9);rect(x + 135, y + 81, 9, 9);rect(x + 135, y + 90, 9, 9);rect(x + 126, y + 90, 9, 9);rect(x + 126, y + 81, 9, 9);rect(x + 117, y + 117, 9, 9);rect(x + 117, y + 126, 9, 9);rect(x + 99, y + 90, 9, 9);rect(x + 72, y + 90, 9, 9);rect(x + 81, y + 81, 9, 9);rect(x + 90, y + 81, 9, 9);rect(x + 81, y + 90, 9, 9);rect(x + 90, y + 90, 9, 9);rect(x + 90, y + 99, 9, 9);rect(x + 90, y + 108, 9, 9);rect(x + 90, y + 117, 9, 9);rect(x + 81, y + 135, 9, 9);rect(x + 81, y + 126, 9, 9);rect(x + 81, y + 117, 9, 9);rect(x + 81, y + 108, 9, 9);rect(x + 81, y + 99, 9, 9);rect(x + 72, y + 99, 9, 9);rect(x + 63, y + 99, 9, 9);rect(x + 54, y + 90, 9, 9);rect(x + 63, y + 108, 9, 9);rect(x + 72, y + 108, 9, 9);rect(x + 72, y + 126, 9, 9);rect(x + 63, y + 135, 9, 9);rect(x + 63, y + 126, 9, 9);rect(x + 72, y + 117, 9, 9);rect(x + 63, y + 117, 9, 9);rect(x + 54, y + 117, 9, 9);rect(x + 54, y + 108, 9, 9);rect(x + 45, y + 108, 9, 9);rect(x + 45, y + 117, 9, 9);rect(x + 36, y + 108, 9, 9);rect(x + 171, y + 108, 9, 9);rect(x + 171, y + 117, 9, 9);rect(x + 36, y + 117, 9, 9);rect(x + 0, y + 81, 9, 9);rect(x + 0, y + 90, 9, 9);rect(x + 153, y + 90, 9, 9);rect(x + 153, y + 81, 9, 9);rect(x + 162, y + 81, 9, 9);rect(x + 171, y + 81, 9, 9);rect(x + 0, y + 108, 9, 9);rect(x + 0, y + 117, 9, 9);rect(x + 0, y + 126, 9, 9);rect(x + 153, y + 126, 9, 9);rect(x + 153, y + 135, 9, 9);rect(x + 0, y + 153, 9, 9);rect(x + 153, y + 153, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 0, y + 162, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 153, y + 180, 9, 9);rect(x + 0, y + 189, 9, 9);rect(x + 0, y + 198, 9, 9);rect(x + 0, y + 207, 9, 9);rect(x + 153, y + 207, 9, 9);rect(x + 153, y + 198, 9, 9);rect(x + 36, y + 189, 9, 9);rect(x + 36, y + 180, 9, 9);rect(x + 36, y + 171, 9, 9);rect(x + 45, y + 171, 9, 9);rect(x + 45, y + 180, 9, 9);rect(x + 45, y + 189, 9, 9);rect(x + 54, y + 189, 9, 9);rect(x + 45, y + 207, 9, 9);rect(x + 45, y + 198, 9, 9);rect(x + 54, y + 198, 9, 9);rect(x + 54, y + 207, 9, 9);rect(x + 72, y + 198, 9, 9);rect(x + 81, y + 198, 9, 9);rect(x + 99, y + 198, 9, 9);rect(x + 90, y + 198, 9, 9);rect(x + 90, y + 207, 9, 9);rect(x + 81, y + 207, 9, 9);rect(x + 54, y + 153, 9, 9);rect(x + 63, y + 162, 9, 9);rect(x + 72, y + 162, 9, 9);rect(x + 81, y + 162, 9, 9);rect(x + 90, y + 162, 9, 9);rect(x + 99, y + 162, 9, 9);rect(x + 99, y + 171, 9, 9);rect(x + 90, y + 171, 9, 9);rect(x + 108, y + 180, 9, 9);rect(x + 135, y + 171, 9, 9);rect(x + 135, y + 153, 9, 9);rect(x + 144, y + 153, 9, 9);rect(x + 153, y + 153, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 144, y + 162, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 153, y + 180, 9, 9);rect(x + 162, y + 180, 9, 9);rect(x + 162, y + 189, 9, 9);rect(x + 153, y + 189, 9, 9);rect(x + 153, y + 198, 9, 9);rect(x + 153, y + 207, 9, 9);rect(x + 144, y + 207, 9, 9);rect(x + 144, y + 198, 9, 9);rect(x + 126, y + 198, 9, 9);rect(x + 117, y + 198, 9, 9);rect(x + 117, y + 207, 9, 9);rect(x + 126, y + 207, 9, 9);rect(x + 189, y + 198, 9, 9);rect(x + 198, y + 198, 9, 9);rect(x + 198, y + 189, 9, 9);rect(x + 189, y + 189, 9, 9);rect(x + 198, y + 180, 9, 9);rect(x + 198, y + 171, 9, 9);rect(x + 207, y + 171, 9, 9);rect(x + 216, y + 171, 9, 9);rect(x + 216, y + 162, 9, 9);rect(x + 207, y + 162, 9, 9);rect(x + 198, y + 207, 9, 9);rect(x + 207, y + 207, 9, 9);rect(x + 207, y + 198, 9, 9);rect(x + 216, y + 198, 9, 9);rect(x + 234, y + 198, 9, 9);rect(x + 234, y + 153, 9, 9);rect(x + 234, y + 162, 9, 9);rect(x + 243, y + 162, 9, 9);rect(x + 252, y + 162, 9, 9);rect(x + 261, y + 171, 9, 9);rect(x + 261, y + 162, 9, 9);rect(x + 279, y + 171, 9, 9);rect(x + 279, y + 162, 9, 9);rect(x + 279, y + 153, 9, 9);rect(x + 270, y + 153, 9, 9);rect(x + 270, y + 162, 9, 9);rect(x + 279, y + 189, 9, 9);rect(x + 270, y + 189, 9, 9);rect(x + 270, y + 198, 9, 9);rect(x + 270, y + 207, 9, 9);rect(x + 279, y + 207, 9, 9);rect(x + 279, y + 198, 9, 9);rect(x + 261, y + 198, 9, 9);rect(x + 252, y + 198, 9, 9);rect(x + 0, y + 225, 9, 9);rect(x + 0, y + 234, 9, 9);rect(x + 0, y + 243, 9, 9);rect(x + 153, y + 243, 9, 9);rect(x + 153, y + 234, 9, 9);rect(x + 153, y + 225, 9, 9);rect(x + 153, y + 252, 9, 9);rect(x + 162, y + 252, 9, 9);rect(x + 171, y + 252, 9, 9);rect(x + 171, y + 243, 9, 9);rect(x + 162, y + 243, 9, 9);rect(x + 162, y + 261, 9, 9);rect(x + 162, y + 270, 9, 9);rect(x + 171, y + 270, 9, 9);rect(x + 171, y + 279, 9, 9);rect(x + 36, y + 279, 9, 9);rect(x + 36, y + 243, 9, 9);rect(x + 36, y + 234, 9, 9);rect(x + 45, y + 234, 9, 9);rect(x + 45, y + 243, 9, 9);rect(x + 54, y + 234, 9, 9);rect(x + 54, y + 225, 9, 9);rect(x + 72, y + 234, 9, 9);rect(x + 72, y + 243, 9, 9);rect(x + 81, y + 243, 9, 9);rect(x + 81, y + 252, 9, 9);rect(x + 72, y + 252, 9, 9);rect(x + 90, y + 252, 9, 9);rect(x + 90, y + 261, 9, 9);rect(x + 90, y + 270, 9, 9);rect(x + 99, y + 270, 9, 9);rect(x + 72, y + 270, 9, 9);rect(x + 81, y + 279, 9, 9);rect(x + 72, y + 279, 9, 9);rect(x + 63, y + 279, 9, 9);rect(x + 54, y + 279, 9, 9);rect(x + 90, y + 225, 9, 9);rect(x + 117, y + 234, 9, 9);rect(x + 117, y + 243, 9, 9);rect(x + 126, y + 225, 9, 9);rect(x + 126, y + 234, 9, 9);rect(x + 126, y + 243, 9, 9);rect(x + 126, y + 252, 9, 9);rect(x + 135, y + 252, 9, 9);rect(x + 135, y + 243, 9, 9);rect(x + 135, y + 234, 9, 9);rect(x + 135, y + 225, 9, 9);rect(x + 144, y + 225, 9, 9);rect(x + 153, y + 225, 9, 9);rect(x + 153, y + 234, 9, 9);rect(x + 153, y + 252, 9, 9);rect(x + 153, y + 243, 9, 9);rect(x + 144, y + 243, 9, 9);rect(x + 144, y + 252, 9, 9);rect(x + 135, y + 261, 9, 9);rect(x + 144, y + 261, 9, 9);rect(x + 144, y + 270, 9, 9);rect(x + 135, y + 270, 9, 9);rect(x + 144, y + 279, 9, 9);rect(x + 153, y + 279, 9, 9);rect(x + 162, y + 279, 9, 9);rect(x + 153, y + 270, 9, 9);rect(x + 162, y + 261, 9, 9);rect(x + 171, y + 270, 9, 9);rect(x + 162, y + 243, 9, 9);rect(x + 162, y + 234, 9, 9);rect(x + 171, y + 234, 9, 9);rect(x + 180, y + 234, 9, 9);rect(x + 180, y + 243, 9, 9);rect(x + 189, y + 243, 9, 9);rect(x + 189, y + 252, 9, 9);rect(x + 198, y + 225, 9, 9);rect(x + 207, y + 234, 9, 9);rect(x + 216, y + 234, 9, 9);rect(x + 225, y + 234, 9, 9);rect(x + 225, y + 243, 9, 9);rect(x + 216, y + 243, 9, 9);rect(x + 207, y + 243, 9, 9);rect(x + 207, y + 252, 9, 9);rect(x + 216, y + 252, 9, 9);rect(x + 225, y + 252, 9, 9);rect(x + 234, y + 243, 9, 9);rect(x + 243, y + 243, 9, 9);rect(x + 207, y + 261, 9, 9);rect(x + 207, y + 270, 9, 9);rect(x + 198, y + 270, 9, 9);rect(x + 189, y + 279, 9, 9);rect(x + 198, y + 279, 9, 9);rect(x + 207, y + 279, 9, 9);rect(x + 216, y + 279, 9, 9);rect(x + 225, y + 279, 9, 9);rect(x + 234, y + 270, 9, 9);rect(x + 243, y + 270, 9, 9);rect(x + 270, y + 279, 9, 9);rect(x + 270, y + 270, 9, 9);rect(x + 279, y + 279, 9, 9);rect(x + 279, y + 270, 9, 9);rect(x + 279, y + 261, 9, 9);rect(x + 279, y + 243, 9, 9);rect(x + 279, y + 234, 9, 9);rect(x + 279, y + 225, 9, 9);rect(x + 270, y + 225, 9, 9);rect(x + 270, y + 234, 9, 9);fill(97, 26, 0);rect(x + 45, y + 153, 9, 9);rect(x + 0, y + 171, 9, 9);rect(x + 153, y + 36, 9, 9);rect(x + 153, y + 45, 9, 9);rect(x + 162, y + 54, 9, 9);rect(x + 72, y + 36, 9, 9);rect(x + 117, y + 171, 9, 9);rect(x + 126, y + 171, 9, 9);rect(x + 135, y + 153, 9, 9);rect(x + 135, y + 162, 9, 9);rect(x + 144, y + 162, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 144, y + 45, 9, 9);rect(x + 126, y + 63, 9, 9);rect(x + 117, y + 63, 9, 9);rect(x + 216, y + 45, 9, 9);rect(x + 225, y + 45, 9, 9);rect(x + 225, y + 36, 9, 9);rect(x + 243, y + 162, 9, 9);rect(x + 279, y + 153, 9, 9);rect(x + 270, y + 153, 9, 9);rect(x + 279, y + 36, 9, 9);rect(x + 252, y + 54, 9, 9);rect(x + 252, y + 63, 9, 9);rect(x + 243, y + 81, 9, 9);rect(x + 261, y + 81, 9, 9);rect(x + 270, y + 108, 9, 9);rect(x + 234, y + 99, 9, 9);rect(x + 216, y + 90, 9, 9);rect(x + 207, y + 99, 9, 9);rect(x + 207, y + 108, 9, 9);rect(x + 198, y + 108, 9, 9);rect(x + 216, y + 117, 9, 9);rect(x + 72, y + 81, 9, 9);rect(x + 54, y + 99, 9, 9);rect(x + 36, y + 99, 9, 9);rect(x + 162, y + 90, 9, 9);rect(x + 0, y + 99, 9, 9);rect(x + 99, y + 99, 9, 9);rect(x + 45, y + 126, 9, 9);rect(x + 36, y + 135, 9, 9);rect(x + 99, y + 135, 9, 9);rect(x + 135, y + 126, 9, 9);rect(x + 171, y + 135, 9, 9);rect(x + 243, y + 135, 9, 9);rect(x + 270, y + 180, 9, 9);rect(x + 252, y + 171, 9, 9);rect(x + 243, y + 171, 9, 9);rect(x + 234, y + 171, 9, 9);rect(x + 216, y + 180, 9, 9);rect(x + 207, y + 153, 9, 9);rect(x + 198, y + 153, 9, 9);rect(x + 198, y + 162, 9, 9);rect(x + 189, y + 171, 9, 9);rect(x + 189, y + 180, 9, 9);rect(x + 117, y + 153, 9, 9);rect(x + 108, y + 162, 9, 9);rect(x + 144, y + 189, 9, 9);rect(x + 99, y + 189, 9, 9);rect(x + 81, y + 189, 9, 9);rect(x + 81, y + 171, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 153, y + 171, 9, 9);rect(x + 0, y + 171, 9, 9);rect(x + 162, y + 180, 9, 9);rect(x + 36, y + 198, 9, 9);rect(x + 45, y + 225, 9, 9);rect(x + 171, y + 225, 9, 9);rect(x + 162, y + 234, 9, 9);rect(x + 171, y + 261, 9, 9);rect(x + 0, y + 279, 9, 9);rect(x + 45, y + 252, 9, 9);rect(x + 63, y + 252, 9, 9);rect(x + 63, y + 270, 9, 9);rect(x + 81, y + 234, 9, 9);rect(x + 135, y + 207, 9, 9);rect(x + 162, y + 207, 9, 9);rect(x + 216, y + 207, 9, 9);rect(x + 207, y + 225, 9, 9);rect(x + 279, y + 252, 9, 9);rect(x + 270, y + 252, 9, 9);rect(x + 234, y + 279, 9, 9);rect(x + 234, y + 261, 9, 9);rect(x + 180, y + 252, 9, 9);rect(x + 171, y + 243, 9, 9);rect(x + 162, y + 270, 9, 9);rect(x + 135, y + 279, 9, 9);rect(x + 126, y + 261, 9, 9);fill(127, 34, 0);rect(x + 162, y + 279, 9, 9);rect(x + 153, y + 279, 9, 9);rect(x + 153, y + 270, 9, 9);rect(x + 153, y + 261, 9, 9);rect(x + 0, y + 252, 9, 9);rect(x + 36, y + 252, 9, 9);rect(x + 63, y + 261, 9, 9);rect(x + 81, y + 261, 9, 9);rect(x + 81, y + 270, 9, 9);rect(x + 117, y + 261, 9, 9);rect(x + 126, y + 279, 9, 9);rect(x + 171, y + 261, 9, 9);rect(x + 180, y + 261, 9, 9);rect(x + 162, y + 252, 9, 9);rect(x + 144, y + 234, 9, 9);rect(x + 90, y + 234, 9, 9);rect(x + 81, y + 225, 9, 9);rect(x + 225, y + 261, 9, 9);rect(x + 234, y + 252, 9, 9);rect(x + 243, y + 252, 9, 9);rect(x + 243, y + 234, 9, 9);rect(x + 225, y + 225, 9, 9);rect(x + 216, y + 225, 9, 9);rect(x + 270, y + 261, 9, 9);rect(x + 234, y + 207, 9, 9);rect(x + 261, y + 180, 9, 9);rect(x + 252, y + 180, 9, 9);rect(x + 243, y + 180, 9, 9);rect(x + 270, y + 171, 9, 9);rect(x + 225, y + 189, 9, 9);rect(x + 207, y + 189, 9, 9);rect(x + 180, y + 180, 9, 9);rect(x + 135, y + 180, 9, 9);rect(x + 135, y + 189, 9, 9);rect(x + 126, y + 180, 9, 9);rect(x + 126, y + 171, 9, 9);rect(x + 99, y + 180, 9, 9);rect(x + 90, y + 180, 9, 9);rect(x + 90, y + 189, 9, 9);rect(x + 72, y + 180, 9, 9);rect(x + 162, y + 189, 9, 9);rect(x + 162, y + 198, 9, 9);rect(x + 0, y + 135, 9, 9);rect(x + 72, y + 135, 9, 9);rect(x + 72, y + 153, 9, 9);rect(x + 90, y + 153, 9, 9);rect(x + 144, y + 135, 9, 9);rect(x + 189, y + 162, 9, 9);rect(x + 180, y + 162, 9, 9);rect(x + 189, y + 117, 9, 9);rect(x + 216, y + 108, 9, 9);rect(x + 225, y + 99, 9, 9);rect(x + 126, y + 99, 9, 9);rect(x + 63, y + 81, 9, 9);rect(x + 54, y + 81, 9, 9);rect(x + 45, y + 90, 9, 9);rect(x + 153, y + 108, 9, 9);rect(x + 36, y + 63, 9, 9);rect(x + 45, y + 63, 9, 9);rect(x + 45, y + 54, 9, 9);rect(x + 54, y + 45, 9, 9);rect(x + 162, y + 36, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 117, y + 153, 9, 9);rect(x + 126, y + 162, 9, 9);rect(x + 144, y + 36, 9, 9);rect(x + 162, y + 45, 9, 9);rect(x + 198, y + 45, 9, 9);rect(x + 216, y + 36, 9, 9);rect(x + 279, y + 171, 9, 9);rect(x + 261, y + 153, 9, 9);fill(37, 70, 9);rect(x + 36, y + 270, 9, 9);rect(x + 45, y + 261, 9, 9);rect(x + 54, y + 252, 9, 9);rect(x + 63, y + 234, 9, 9);rect(x + 99, y + 252, 9, 9);rect(x + 198, y + 252, 9, 9);rect(x + 189, y + 234, 9, 9);rect(x + 234, y + 189, 9, 9);rect(x + 234, y + 180, 9, 9);rect(x + 117, y + 180, 9, 9);rect(x + 117, y + 171, 9, 9);rect(x + 63, y + 189, 9, 9);rect(x + 54, y + 171, 9, 9);rect(x + 162, y + 126, 9, 9);rect(x + 162, y + 108, 9, 9);rect(x + 36, y + 90, 9, 9);rect(x + 72, y + 45, 9, 9);rect(x + 63, y + 36, 9, 9);rect(x + 54, y + 36, 9, 9);rect(x + 45, y + 171, 9, 9);rect(x + 90, y + 171, 9, 9);rect(x + 99, y + 45, 9, 9);rect(x + 126, y + 108, 9, 9);rect(x + 126, y + 126, 9, 9);rect(x + 171, y + 108, 9, 9);rect(x + 171, y + 99, 9, 9);rect(x + 270, y + 99, 9, 9);rect(x + 270, y + 45, 9, 9);rect(x + 261, y + 171, 9, 9);rect(x + 252, y + 162, 9, 9);rect(x + 243, y + 153, 9, 9);rect(x + 189, y + 171, 9, 9);rect(x + 180, y + 162, 9, 9);fill(15, 5, 2);rect(x + 171, y + 216, 9, 9);fill(0, 0, 0);rect(x + 108, y + 216, 9, 9);rect(x + 171, y + 216, 9, 9);rect(x + 252, y + 144, 9, 9);rect(x + 171, y + 72, 9, 9);rect(x + 171, y + 72, 9, 9);rect(x + 171, y + 0, 9, 9);fill(142, 38, 0);rect(x + 216, y + 261, 9, 9);rect(x + 234, y + 234, 9, 9);rect(x + 216, y + 189, 9, 9);rect(x + 162, y + 198, 9, 9);rect(x + 144, y + 180, 9, 9);rect(x + 81, y + 180, 9, 9);rect(x + 153, y + 189, 9, 9);rect(x + 0, y + 180, 9, 9);rect(x + 54, y + 135, 9, 9);rect(x + 36, y + 126, 9, 9);rect(x + 144, y + 117, 9, 9);rect(x + 135, y + 108, 9, 9);rect(x + 198, y + 117, 9, 9);rect(x + 207, y + 135, 9, 9);rect(x + 189, y + 153, 9, 9);rect(x + 279, y + 81, 9, 9);rect(x + 270, y + 162, 9, 9);rect(x + 207, y + 36, 9, 9);rect(x + 198, y + 36, 9, 9);rect(x + 180, y + 36, 9, 9);rect(x + 153, y + 36, 9, 9);rect(x + 135, y + 171, 9, 9);rect(x + 45, y + 45, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 153, y + 162, 9, 9);rect(x + 153, y + 153, 9, 9);fill(82, 22, 0);rect(x + 36, y + 261, 9, 9);rect(x + 54, y + 270, 9, 9);rect(x + 72, y + 261, 9, 9);rect(x + 90, y + 279, 9, 9);rect(x + 90, y + 243, 9, 9);rect(x + 171, y + 234, 9, 9);rect(x + 36, y + 225, 9, 9);rect(x + 162, y + 207, 9, 9);rect(x + 126, y + 270, 9, 9);rect(x + 153, y + 261, 9, 9);rect(x + 171, y + 252, 9, 9);rect(x + 216, y + 270, 9, 9);rect(x + 225, y + 270, 9, 9);rect(x + 243, y + 261, 9, 9);rect(x + 261, y + 207, 9, 9);rect(x + 261, y + 189, 9, 9);rect(x + 279, y + 180, 9, 9);rect(x + 225, y + 198, 9, 9);rect(x + 225, y + 207, 9, 9);rect(x + 207, y + 180, 9, 9);rect(x + 135, y + 198, 9, 9);rect(x + 108, y + 171, 9, 9);rect(x + 108, y + 153, 9, 9);rect(x + 135, y + 162, 9, 9);rect(x + 72, y + 171, 9, 9);rect(x + 63, y + 171, 9, 9);rect(x + 63, y + 153, 9, 9);rect(x + 81, y + 153, 9, 9);rect(x + 36, y + 162, 9, 9);rect(x + 162, y + 153, 9, 9);rect(x + 243, y + 153, 9, 9);rect(x + 261, y + 153, 9, 9);rect(x + 117, y + 135, 9, 9);rect(x + 90, y + 135, 9, 9);rect(x + 90, y + 126, 9, 9);rect(x + 99, y + 126, 9, 9);rect(x + 99, y + 108, 9, 9);rect(x + 45, y + 135, 9, 9);rect(x + 171, y + 126, 9, 9);rect(x + 45, y + 99, 9, 9);rect(x + 63, y + 90, 9, 9);rect(x + 153, y + 99, 9, 9);rect(x + 135, y + 99, 9, 9);rect(x + 117, y + 81, 9, 9);rect(x + 99, y + 81, 9, 9);rect(x + 153, y + 81, 9, 9);rect(x + 162, y + 81, 9, 9);rect(x + 180, y + 135, 9, 9);rect(x + 189, y + 135, 9, 9);rect(x + 216, y + 135, 9, 9);rect(x + 225, y + 108, 9, 9);rect(x + 261, y + 117, 9, 9);rect(x + 261, y + 90, 9, 9);rect(x + 243, y + 63, 9, 9);rect(x + 207, y + 45, 9, 9);rect(x + 252, y + 171, 9, 9);rect(x + 153, y + 45, 9, 9);rect(x + 135, y + 36, 9, 9);rect(x + 108, y + 162, 9, 9);rect(x + 162, y + 153, 9, 9);rect(x + 0, y + 162, 9, 9);rect(x + 45, y + 36, 9, 9);rect(x + 36, y + 45, 9, 9);rect(x + 36, y + 54, 9, 9);rect(x + 180, y + 63, 9, 9);fill(30, 56, 7);rect(x + 54, y + 261, 9, 9);rect(x + 45, y + 270, 9, 9);rect(x + 54, y + 243, 9, 9);rect(x + 63, y + 243, 9, 9);rect(x + 99, y + 243, 9, 9);rect(x + 99, y + 225, 9, 9);rect(x + 99, y + 261, 9, 9);rect(x + 117, y + 270, 9, 9);rect(x + 189, y + 261, 9, 9);rect(x + 198, y + 261, 9, 9);rect(x + 198, y + 243, 9, 9);rect(x + 198, y + 234, 9, 9);rect(x + 261, y + 261, 9, 9);rect(x + 261, y + 243, 9, 9);rect(x + 270, y + 243, 9, 9);rect(x + 261, y + 225, 9, 9);rect(x + 243, y + 207, 9, 9);rect(x + 252, y + 189, 9, 9);rect(x + 243, y + 189, 9, 9);rect(x + 189, y + 207, 9, 9);rect(x + 180, y + 189, 9, 9);rect(x + 171, y + 180, 9, 9);rect(x + 162, y + 162, 9, 9);rect(x + 126, y + 162, 9, 9);rect(x + 117, y + 162, 9, 9);rect(x + 117, y + 189, 9, 9);rect(x + 108, y + 198, 9, 9);rect(x + 63, y + 198, 9, 9);rect(x + 72, y + 189, 9, 9);rect(x + 63, y + 180, 9, 9);rect(x + 54, y + 180, 9, 9);rect(x + 54, y + 162, 9, 9);rect(x + 45, y + 162, 9, 9);rect(x + 162, y + 117, 9, 9);rect(x + 153, y + 117, 9, 9);rect(x + 162, y + 99, 9, 9);rect(x + 171, y + 99, 9, 9);rect(x + 171, y + 90, 9, 9);rect(x + 36, y + 81, 9, 9);rect(x + 63, y + 54, 9, 9);rect(x + 63, y + 45, 9, 9);rect(x + 54, y + 171, 9, 9);rect(x + 45, y + 162, 9, 9);rect(x + 36, y + 162, 9, 9);rect(x + 90, y + 162, 9, 9);rect(x + 99, y + 162, 9, 9);rect(x + 90, y + 36, 9, 9);rect(x + 90, y + 45, 9, 9);rect(x + 99, y + 54, 9, 9);rect(x + 108, y + 54, 9, 9);rect(x + 117, y + 90, 9, 9);rect(x + 117, y + 108, 9, 9);rect(x + 126, y + 117, 9, 9);rect(x + 162, y + 117, 9, 9);rect(x + 171, y + 117, 9, 9);rect(x + 171, y + 90, 9, 9);rect(x + 180, y + 81, 9, 9);rect(x + 189, y + 54, 9, 9);rect(x + 189, y + 45, 9, 9);rect(x + 189, y + 36, 9, 9);rect(x + 180, y + 45, 9, 9);rect(x + 189, y + 162, 9, 9);rect(x + 180, y + 153, 9, 9);rect(x + 252, y + 153, 9, 9);rect(x + 261, y + 162, 9, 9);rect(x + 270, y + 171, 9, 9);rect(x + 270, y + 36, 9, 9);rect(x + 270, y + 81, 9, 9);rect(x + 270, y + 90, 9, 9);rect(x + 279, y + 90, 9, 9);rect(x + 261, y + 99, 9, 9);rect(x + 261, y + 108, 9, 9);rect(x + 243, y + 117, 9, 9);fill(44, 14, 5);rect(x + 108, y + 243, 9, 9);rect(x + 117, y + 216, 9, 9);rect(x + 126, y + 216, 9, 9);rect(x + 135, y + 216, 9, 9);rect(x + 90, y + 216, 9, 9);rect(x + 45, y + 216, 9, 9);rect(x + 171, y + 207, 9, 9);rect(x + 171, y + 189, 9, 9);rect(x + 153, y + 216, 9, 9);rect(x + 0, y + 216, 9, 9);rect(x + 180, y + 216, 9, 9);rect(x + 171, y + 198, 9, 9);rect(x + 234, y + 216, 9, 9);rect(x + 270, y + 216, 9, 9);rect(x + 252, y + 243, 9, 9);rect(x + 252, y + 252, 9, 9);rect(x + 171, y + 153, 9, 9);rect(x + 0, y + 144, 9, 9);rect(x + 54, y + 144, 9, 9);rect(x + 63, y + 144, 9, 9);rect(x + 72, y + 144, 9, 9);rect(x + 90, y + 144, 9, 9);rect(x + 117, y + 144, 9, 9);rect(x + 135, y + 144, 9, 9);rect(x + 108, y + 135, 9, 9);rect(x + 108, y + 126, 9, 9);rect(x + 108, y + 99, 9, 9);rect(x + 81, y + 72, 9, 9);rect(x + 72, y + 72, 9, 9);rect(x + 36, y + 72, 9, 9);rect(x + 171, y + 63, 9, 9);rect(x + 162, y + 72, 9, 9);rect(x + 0, y + 72, 9, 9);rect(x + 171, y + 45, 9, 9);rect(x + 171, y + 171, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 153, y + 0, 9, 9);rect(x + 0, y + 0, 9, 9);rect(x + 81, y + 0, 9, 9);rect(x + 90, y + 0, 9, 9);rect(x + 126, y + 0, 9, 9);rect(x + 153, y + 0, 9, 9);rect(x + 180, y + 0, 9, 9);rect(x + 198, y + 0, 9, 9);rect(x + 216, y + 0, 9, 9);rect(x + 225, y + 0, 9, 9);rect(x + 234, y + 0, 9, 9);rect(x + 261, y + 0, 9, 9);rect(x + 270, y + 0, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 171, y + 171, 9, 9);rect(x + 171, y + 36, 9, 9);rect(x + 171, y + 54, 9, 9);rect(x + 162, y + 72, 9, 9);rect(x + 144, y + 72, 9, 9);rect(x + 243, y + 72, 9, 9);rect(x + 252, y + 99, 9, 9);rect(x + 261, y + 144, 9, 9);rect(x + 234, y + 144, 9, 9);rect(x + 180, y + 144, 9, 9);rect(x + 171, y + 153, 9, 9);fill(23, 42, 5);rect(x + 45, y + 279, 9, 9);rect(x + 117, y + 279, 9, 9);rect(x + 108, y + 261, 9, 9);rect(x + 180, y + 270, 9, 9);rect(x + 189, y + 270, 9, 9);rect(x + 243, y + 279, 9, 9);rect(x + 252, y + 270, 9, 9);rect(x + 261, y + 270, 9, 9);rect(x + 261, y + 252, 9, 9);rect(x + 261, y + 234, 9, 9);rect(x + 261, y + 216, 9, 9);rect(x + 252, y + 216, 9, 9);rect(x + 243, y + 198, 9, 9);rect(x + 189, y + 216, 9, 9);rect(x + 180, y + 225, 9, 9);rect(x + 180, y + 198, 9, 9);rect(x + 171, y + 189, 9, 9);rect(x + 108, y + 207, 9, 9);rect(x + 99, y + 207, 9, 9);rect(x + 108, y + 189, 9, 9);rect(x + 99, y + 234, 9, 9);rect(x + 72, y + 225, 9, 9);rect(x + 63, y + 225, 9, 9);rect(x + 63, y + 207, 9, 9);rect(x + 72, y + 207, 9, 9);rect(x + 36, y + 144, 9, 9);rect(x + 36, y + 153, 9, 9);rect(x + 171, y + 135, 9, 9);rect(x + 162, y + 135, 9, 9);rect(x + 126, y + 153, 9, 9);rect(x + 126, y + 135, 9, 9);rect(x + 135, y + 135, 9, 9);rect(x + 153, y + 144, 9, 9);rect(x + 162, y + 144, 9, 9);rect(x + 162, y + 153, 9, 9);rect(x + 162, y + 171, 9, 9);rect(x + 180, y + 171, 9, 9);rect(x + 162, y + 126, 9, 9);rect(x + 225, y + 180, 9, 9);rect(x + 225, y + 162, 9, 9);rect(x + 216, y + 153, 9, 9);rect(x + 225, y + 144, 9, 9);rect(x + 243, y + 126, 9, 9);rect(x + 252, y + 108, 9, 9);rect(x + 270, y + 72, 9, 9);rect(x + 270, y + 54, 9, 9);rect(x + 261, y + 54, 9, 9);rect(x + 189, y + 72, 9, 9);rect(x + 180, y + 72, 9, 9);rect(x + 180, y + 90, 9, 9);rect(x + 108, y + 108, 9, 9);rect(x + 108, y + 90, 9, 9);rect(x + 108, y + 81, 9, 9);rect(x + 99, y + 72, 9, 9);rect(x + 99, y + 63, 9, 9);rect(x + 63, y + 63, 9, 9);rect(x + 63, y + 72, 9, 9);rect(x + 45, y + 72, 9, 9);rect(x + 45, y + 81, 9, 9);rect(x + 36, y + 153, 9, 9);rect(x + 99, y + 153, 9, 9);rect(x + 108, y + 153, 9, 9);rect(x + 171, y + 0, 9, 9);rect(x + 171, y + 153, 9, 9);fill(67, 18, 0);rect(x + 0, y + 270, 9, 9);rect(x + 99, y + 279, 9, 9);rect(x + 117, y + 252, 9, 9);rect(x + 162, y + 225, 9, 9);rect(x + 261, y + 279, 9, 9);rect(x + 234, y + 225, 9, 9);rect(x + 243, y + 225, 9, 9);rect(x + 171, y + 225, 9, 9);rect(x + 126, y + 189, 9, 9);rect(x + 144, y + 171, 9, 9);rect(x + 180, y + 153, 9, 9);rect(x + 261, y + 135, 9, 9);rect(x + 99, y + 153, 9, 9);rect(x + 54, y + 126, 9, 9);rect(x + 144, y + 108, 9, 9);rect(x + 162, y + 90, 9, 9);rect(x + 171, y + 81, 9, 9);rect(x + 162, y + 63, 9, 9);rect(x + 234, y + 153, 9, 9);rect(x + 108, y + 63, 9, 9);rect(x + 54, y + 63, 9, 9);rect(x + 0, y + 153, 9, 9);fill(157, 42, 0);rect(x + 0, y + 261, 9, 9);fill(113, 30, 0);rect(x + 243, y + 90, 9, 9);fill(2, 1, 0);rect(x + 108, y + 144, 9, 9);rect(x + 108, y + 279, 9, 9);rect(x + 171, y + 144, 9, 9);rect(x + 108, y + 117, 9, 9);rect(x + 117, y + 72, 9, 9);rect(x + 252, y + 72, 9, 9);fill(30, 10, 3);rect(x + 162, y + 216, 9, 9);rect(x + 171, y + 198, 9, 9);rect(x + 54, y + 216, 9, 9);rect(x + 81, y + 216, 9, 9);rect(x + 108, y + 252, 9, 9);rect(x + 153, y + 216, 9, 9);rect(x + 171, y + 207, 9, 9);rect(x + 207, y + 216, 9, 9);rect(x + 225, y + 216, 9, 9);rect(x + 243, y + 216, 9, 9);rect(x + 252, y + 234, 9, 9);rect(x + 279, y + 144, 9, 9);rect(x + 252, y + 135, 9, 9);rect(x + 252, y + 126, 9, 9);rect(x + 252, y + 90, 9, 9);rect(x + 171, y + 63, 9, 9);rect(x + 171, y + 45, 9, 9);rect(x + 81, y + 144, 9, 9);rect(x + 162, y + 144, 9, 9);rect(x + 171, y + 162, 9, 9);rect(x + 90, y + 72, 9, 9);rect(x + 171, y + 36, 9, 9);rect(x + 171, y + 153, 9, 9);fill(37, 10, 0);rect(x + 36, y + 207, 9, 9);rect(x + 117, y + 225, 9, 9);fill(16, 27, 4);rect(x + 171, y + 279, 9, 9);rect(x + 180, y + 279, 9, 9);rect(x + 189, y + 63, 9, 9);rect(x + 117, y + 0, 9, 9);rect(x + 108, y + 0, 9, 9);fill(0, 46, 0);rect(x + 171, y + 171, 9, 9);fill(15, 28, 3);rect(x + 108, y + 270, 9, 9);rect(x + 108, y + 234, 9, 9);rect(x + 72, y + 216, 9, 9);rect(x + 189, y + 225, 9, 9);rect(x + 180, y + 207, 9, 9);rect(x + 252, y + 279, 9, 9);rect(x + 252, y + 207, 9, 9);rect(x + 225, y + 171, 9, 9);rect(x + 225, y + 153, 9, 9);rect(x + 225, y + 135, 9, 9);rect(x + 234, y + 135, 9, 9);rect(x + 234, y + 126, 9, 9);rect(x + 270, y + 63, 9, 9);rect(x + 162, y + 135, 9, 9);rect(x + 126, y + 144, 9, 9);rect(x + 45, y + 153, 9, 9);rect(x + 171, y + 144, 9, 9);rect(x + 108, y + 72, 9, 9);rect(x + 54, y + 72, 9, 9);rect(x + 36, y + 0, 9, 9);fill(16, 5, 2);rect(x + 45, y + 144, 9, 9);rect(x + 171, y + 54, 9, 9);rect(x + 162, y + 0, 9, 9);rect(x + 279, y + 72, 9, 9);fill(72, 23, 8);rect(x + 171, y + 171, 9, 9);rect(x + 162, y + 0, 9, 9);fill(52, 14, 0);rect(x + 99, y + 117, 9, 9);rect(x + 252, y + 153, 9, 9);rect(x + 261, y + 63, 9, 9);fill(53, 14, 0);rect(x + 162, y + 153, 9, 9);fill(23, 41, 5);rect(x + 117, y + 99, 9, 9);fill(24, 40, 6);rect(x + 252, y + 117, 9, 9);rect(x + 99, y + 216, 9, 9);fill(22, 42, 4);rect(x + 45, y + 0, 9, 9);rect(x + 243, y + 0, 9, 9);fill(127, 34, 0);rect(x + 63, y + 171, 9, 9);fill(82, 22, 0);rect(x + 162, y + 225, 9, 9);
      }
    }
    fill(255,0,0);
    try{
    for(Enemy e : enemies){
      e.Move();
    }
    }catch(Exception e){}
    UpdatePlayer();
    try{
    for(Enemy e : enemies){
      e.Show();
    }
    }catch(Exception e){}
    //try{
    for(Obstacle o : obstacles){
      o.Display();
    }
    for(RoomFloors r : roomfloors){
      r.Display();
    }
    EnemyCollisions();
    checkForKill();
    CalcScore();
    if(!lavastopped)
      MoveLava();
    ShowLava();
    removeSubmergedEntities();
    checkForNewLevelGeneration();
    textSize(14);
    fill(0,255,0);
    /*text("lavay = " + lavay,800,60);
    text("py = " + py + " (from top left)",800,80);
    text("yvel = " + yvel,800,100);
    text("isonground = " + isonground,800,120);
    text("singlejump = " + singlejump,800,140);
    text("doublejump = " + doublejump,800,160);
    text("Distyup = " + distyup,800,180);
    text("Distydown = " + distydown,800,200);
    text("Score = " + score,800,220);
    text("MaxY = " + maxy,800,240);
    text("Global Y = " + globaly,800,260);
    text("Invincible = " + invincible,800,280);
    text("lava stopped = " + lavastopped,800,300);*/
    if(invincible){
      fill(58, 19, 6);
      rect(150,30,260,100);
      fill(127, 34, 0);
      rect(160, 40,240,80);
      fill(40, 154, 26);
      textSize(24);
      text("You are invincible!\n           " + (200 - invinctimer),170,70);
    }
    if(lavastopped){
      fill(58, 19, 6);
      rect(580,30,260,100);
      fill(127, 34, 0);
      rect(590, 40,240,80);
      fill(40, 154, 26);
      textSize(24);
      text("Lava is stopped!\n           " + (200 - lavatimer),610,70);
    }
    fill(58, 19, 6);
    rect(435,30,120,100);
    fill(127, 34, 0);
    rect(445, 40,100,80);//+10
    fill(40, 154, 26);
    textSize(24);
    text("Score:\n" + score,460,70);//+30
    //delay(100);
    UpdateTimers();
  }
}

void keyPressed() {
  if (key == CODED) {
    if (keyCode == UP) {
      if(!singlejump){
        yvel = -40;
        singlejump = true;
      }else if(!doublejump){
        yvel = -40;
        doublejump = true;
      }
    }else if (keyCode == RIGHT) {
      movingright = true;
      facingright = true;
    }else if (keyCode == LEFT) {
      movingleft = true;
      facingright = false;
    }
  }
   if (keyPressed) {//other keys
    if (key == 'w' || key == 'W') {
      if(!singlejump){
        yvel = -40;
        singlejump = true;
      }else if(!doublejump){
        yvel = -40;
        doublejump = true;
      }
    }
    else if (key == 'd' || key == 'D') {//move right
      movingright = true;
      facingright = true;
    }else if (key == 'a' || key == 'A') {//move left
      movingleft = true;
      facingright = false;
    }else if (key == 'p' || key == 'P') {//pause game
      if(paused && gameStarted)
        paused = false;
      else{
        paused = true;
        if(gameStarted)//if player is alive
          Pause(false, false);
      }
    }else if(key == 'r' || key == 'R') {//restart game
      if(!gameStarted || paused){
        Restart();
        paused = false;
        gameStarted = true;
      }
    }
   }
}
void keyReleased() {
  if (key == CODED) {
    if (keyCode == RIGHT) {
      movingright = false;
    }else if (keyCode == LEFT) {
      movingleft = false;
    }
  }
  if (key == 'd' || key == 'd') {
    movingright = false;
  }
  else if (key == 'a' || key == 'a') {
    movingleft = false;
  }
}
void Pause(boolean fail, boolean start){
  fill(58, 19, 6);
  rect(275,275,450,250);
  fill(127, 34, 0);
  rect(300,300,400,200);
  fill(40, 154, 26);
  textSize(32);
  if(fail){//fail screen
    text("GAME OVER!",400,350);
    textSize(18);
    text("Your score was " + score + " points!\n     Press R to restart!",395,400);
  }else if(start){//starting screen
    text("Welcome to Lava Escape!",400,300,200,500);
    textSize(18);
    text("Press R to Start,",427,420);
    text("Press P to Pause",425,450);
  }else{//regular pause
    text("Game Paused",400,350);
    textSize(18);
    text("Press P to Unpause,",415,400);
    text("Press R to restart",425,430);
  }
}
void Restart(){
  lavay = 800;
  //kill all obstacles
  obstacles.clear();
  enemies.clear();
  roomfloors.clear();
  DrawPlayer();
  numofrooms = 1;
  createNewRoom();
  createNewRoom();
  yvel = 0;
  px = 484;
  maxy = 124;
  score = 0;
  globaly = 124;
}
void EnemyCollisions(){
 for(int e = 0; e < enemies.size(); e++){
   if((px > enemies.get(e).l && px < enemies.get(e).r) || (px + pwidth > enemies.get(e).l && px + pwidth < enemies.get(e).r) || (px + 20 > enemies.get(e).l && px + 20 < enemies.get(e).r) || (px + 40 > enemies.get(e).l && px + 40 < enemies.get(e).r)){//if on same x as enemy
     if(py + pheight < enemies.get(e).u && py + pheight + yvel > enemies.get(e).u){//if stomps on enemy
       if(enemies.get(e).type == 0 || enemies.get(e).type == 1 || enemies.get(e).type == 2){//goomba stomp
         enemies.remove(e);
         score += 20;
         yvel = -40;
         singlejump = false;
         doublejump = false;
       }else if(enemies.get(e).type == 3){//spike
         if(!invincible){
           paused = true;
           Pause(true, false);
           gameStarted = false;
         }
       }else if(enemies.get(e).type == 4){//invincibility
         invincible = true;
         invinctimer = 0;
       }else if(enemies.get(e).type == 5){//stop lava
         lavastopped = true;
         lavatimer = 0;
       }
     }
     else if((py < enemies.get(e).d && py > enemies.get(e).u) || (py + pheight < enemies.get(e).d && py + pheight > enemies.get(e).u) || (py + 20 < enemies.get(e).d && py + 20 > enemies.get(e).u) || (py + 40 < enemies.get(e).d && py + 40 > enemies.get(e).u)){
       if(enemies.get(e).type == 0 || enemies.get(e).type == 1 || enemies.get(e).type == 2 || enemies.get(e).type == 3){//die if hit enemies from bottom
         if(!invincible){
           paused = true;
           Pause(true, false);
           gameStarted = false;
         }
       }else if(enemies.get(e).type == 4){//invincibility
         invincible = true;
         enemies.remove(e);
         score += 20;
         invinctimer = 0;
       }else if(enemies.get(e).type == 5){//stop lava
         lavastopped = true;
         enemies.remove(e);
         score += 20;
         lavatimer = 0;
       }
     }
   }
   else if(enemies.get(e).d >= lavay)//if die in lava
       enemies.remove(e);
 }
}
void removeSubmergedEntities(){
  for(int e = 0; e < enemies.size(); e++){
    if(enemies.get(e).u > lavay + 6)
      enemies.remove(e);
  }
  for(int o = 0; o < obstacles.size(); o++){
    if(obstacles.get(o).u > lavay + 6)
      obstacles.remove(o);
  }
  for(int r = 0; r < roomfloors.size(); r++){
    if(roomfloors.get(r).y > lavay + 6)
      roomfloors.remove(r);
  }
}
void CalcScore(){
  if(globaly >= maxy + 10){
    maxy = globaly;
    score += 1;
  }
}
boolean invincible = false;
int invinctimer = 0;
boolean lavastopped = false;
int lavatimer = 0;
void UpdateTimers(){
  if(invincible)
    invinctimer++;
  if(invinctimer > 200){
    invincible = false;
    invinctimer = 0;
  }
  if(lavastopped)
    lavatimer++;
  if(lavatimer > 200){
    lavastopped = false;
    lavatimer = 0;
  }
}
void checkForNewLevelGeneration(){
  if(globaly >= (numofrooms - 2) * 800){
    createNewRoom();
  }
}
