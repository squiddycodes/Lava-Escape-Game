float lavaspeed = .2;//starting speed - will change to 0 until player moves
float lavay = 750;
void MoveLava(){
  //lavay -= abs(lavaspeed + score * .01);
  lavay -= abs(lavaspeed + (lavay - 620)*.005);
}
void ShowLava(){
  for(int x = 0; x < 1000; x+=96){
    fill(189, 56, 18);rect(x + 0, lavay + 24, 3, 3);rect(x + 6, lavay + 24, 3, 3);rect(x + 9, lavay + 24, 3, 3);rect(x + 15, lavay + 24, 3, 3);rect(x + 18, lavay + 24, 3, 3);rect(x + 21, lavay + 24, 3, 3);rect(x + 21, lavay + 21, 3, 3);rect(x + 18, lavay + 21, 3, 3);rect(x + 24, lavay + 24, 3, 3);rect(x + 27, lavay + 24, 3, 3);rect(x + 27, lavay + 21, 3, 3);rect(x + 30, lavay + 24, 3, 3);rect(x + 33, lavay + 24, 3, 3);rect(x + 36, lavay + 21, 3, 3);rect(x + 36, lavay + 24, 3, 3);rect(x + 39, lavay + 24, 3, 3);rect(x + 42, lavay + 24, 3, 3);rect(x + 45, lavay + 24, 3, 3);rect(x + 48, lavay + 24, 3, 3);rect(x + 48, lavay + 21, 3, 3);rect(x + 54, lavay + 24, 3, 3);rect(x + 57, lavay + 24, 3, 3);rect(x + 60, lavay + 24, 3, 3);rect(x + 60, lavay + 21, 3, 3);rect(x + 63, lavay + 21, 3, 3);rect(x + 66, lavay + 21, 3, 3);rect(x + 66, lavay + 24, 3, 3);rect(x + 63, lavay + 24, 3, 3);rect(x + 63, lavay + 18, 3, 3);rect(x + 69, lavay + 21, 3, 3);rect(x + 69, lavay + 24, 3, 3);rect(x + 72, lavay + 24, 3, 3);rect(x + 72, lavay + 21, 3, 3);rect(x + 72, lavay + 18, 3, 3);rect(x + 69, lavay + 18, 3, 3);rect(x + 75, lavay + 21, 3, 3);rect(x + 78, lavay + 21, 3, 3);rect(x + 75, lavay + 24, 3, 3);rect(x + 78, lavay + 24, 3, 3);rect(x + 81, lavay + 24, 3, 3);rect(x + 84, lavay + 24, 3, 3);rect(x + 84, lavay + 21, 3, 3);rect(x + 87, lavay + 24, 3, 3);rect(x + 90, lavay + 24, 3, 3);fill(189, 71, 18);rect(x + 0, lavay + 18, 3, 3);rect(x + 0, lavay + 21, 3, 3);rect(x + 3, lavay + 21, 3, 3);rect(x + 3, lavay + 18, 3, 3);rect(x + 3, lavay + 15, 3, 3);rect(x + 3, lavay + 24, 3, 3);rect(x + 6, lavay + 21, 3, 3);rect(x + 6, lavay + 18, 3, 3);rect(x + 9, lavay + 21, 3, 3);rect(x + 15, lavay + 21, 3, 3);rect(x + 12, lavay + 24, 3, 3);rect(x + 12, lavay + 21, 3, 3);rect(x + 12, lavay + 18, 3, 3);rect(x + 15, lavay + 18, 3, 3);rect(x + 15, lavay + 15, 3, 3);rect(x + 18, lavay + 15, 3, 3);rect(x + 21, lavay + 12, 3, 3);rect(x + 21, lavay + 15, 3, 3);rect(x + 21, lavay + 18, 3, 3);rect(x + 18, lavay + 18, 3, 3);rect(x + 24, lavay + 15, 3, 3);rect(x + 27, lavay + 15, 3, 3);rect(x + 27, lavay + 18, 3, 3);rect(x + 24, lavay + 18, 3, 3);rect(x + 24, lavay + 21, 3, 3);rect(x + 30, lavay + 18, 3, 3);rect(x + 30, lavay + 21, 3, 3);rect(x + 33, lavay + 21, 3, 3);rect(x + 33, lavay + 18, 3, 3);rect(x + 33, lavay + 15, 3, 3);rect(x + 36, lavay + 18, 3, 3);rect(x + 39, lavay + 18, 3, 3);rect(x + 42, lavay + 18, 3, 3);rect(x + 45, lavay + 18, 3, 3);rect(x + 45, lavay + 21, 3, 3);rect(x + 42, lavay + 21, 3, 3);rect(x + 39, lavay + 21, 3, 3);rect(x + 45, lavay + 15, 3, 3);rect(x + 48, lavay + 18, 3, 3);rect(x + 51, lavay + 18, 3, 3);rect(x + 51, lavay + 21, 3, 3);rect(x + 51, lavay + 24, 3, 3);rect(x + 54, lavay + 21, 3, 3);rect(x + 57, lavay + 21, 3, 3);rect(x + 57, lavay + 18, 3, 3);rect(x + 60, lavay + 18, 3, 3);rect(x + 60, lavay + 15, 3, 3);rect(x + 63, lavay + 15, 3, 3);rect(x + 66, lavay + 18, 3, 3);rect(x + 66, lavay + 15, 3, 3);rect(x + 66, lavay + 12, 3, 3);rect(x + 69, lavay + 9, 3, 3);rect(x + 69, lavay + 12, 3, 3);rect(x + 69, lavay + 15, 3, 3);rect(x + 72, lavay + 15, 3, 3);rect(x + 75, lavay + 12, 3, 3);rect(x + 75, lavay + 15, 3, 3);rect(x + 78, lavay + 15, 3, 3);rect(x + 78, lavay + 18, 3, 3);rect(x + 75, lavay + 18, 3, 3);rect(x + 81, lavay + 18, 3, 3);rect(x + 81, lavay + 21, 3, 3);rect(x + 84, lavay + 18, 3, 3);rect(x + 84, lavay + 15, 3, 3);rect(x + 87, lavay + 18, 3, 3);rect(x + 87, lavay + 21, 3, 3);rect(x + 90, lavay + 21, 3, 3);rect(x + 90, lavay + 18, 3, 3);rect(x + 90, lavay + 15, 3, 3);rect(x + 93, lavay + 21, 3, 3);rect(x + 93, lavay + 24, 3, 3);fill(189, 94, 18);rect(x + 0, lavay + 15, 3, 3);rect(x + 3, lavay + 12, 3, 3);rect(x + 6, lavay + 12, 3, 3);rect(x + 6, lavay + 15, 3, 3);rect(x + 9, lavay + 18, 3, 3);rect(x + 9, lavay + 15, 3, 3);rect(x + 12, lavay + 15, 3, 3);rect(x + 12, lavay + 12, 3, 3);rect(x + 12, lavay + 9, 3, 3);rect(x + 15, lavay + 12, 3, 3);rect(x + 18, lavay + 12, 3, 3);rect(x + 18, lavay + 9, 3, 3);rect(x + 18, lavay + 6, 3, 3);rect(x + 21, lavay + 9, 3, 3);rect(x + 24, lavay + 9, 3, 3);rect(x + 24, lavay + 6, 3, 3);rect(x + 27, lavay + 9, 3, 3);rect(x + 27, lavay + 12, 3, 3);rect(x + 24, lavay + 12, 3, 3);rect(x + 30, lavay + 12, 3, 3);rect(x + 30, lavay + 15, 3, 3);rect(x + 33, lavay + 12, 3, 3);rect(x + 33, lavay + 9, 3, 3);rect(x + 36, lavay + 12, 3, 3);rect(x + 36, lavay + 15, 3, 3);rect(x + 39, lavay + 15, 3, 3);rect(x + 42, lavay + 15, 3, 3);rect(x + 42, lavay + 12, 3, 3);rect(x + 45, lavay + 12, 3, 3);rect(x + 48, lavay + 15, 3, 3);rect(x + 51, lavay + 15, 3, 3);rect(x + 57, lavay + 15, 3, 3);rect(x + 57, lavay + 12, 3, 3);rect(x + 51, lavay + 12, 3, 3);rect(x + 54, lavay + 18, 3, 3);rect(x + 54, lavay + 15, 3, 3);rect(x + 54, lavay + 12, 3, 3);rect(x + 54, lavay + 9, 3, 3);rect(x + 60, lavay + 12, 3, 3);rect(x + 63, lavay + 12, 3, 3);rect(x + 63, lavay + 9, 3, 3);rect(x + 60, lavay + 9, 3, 3);rect(x + 63, lavay + 6, 3, 3);rect(x + 66, lavay + 9, 3, 3);rect(x + 69, lavay + 6, 3, 3);rect(x + 72, lavay + 6, 3, 3);rect(x + 72, lavay + 9, 3, 3);rect(x + 72, lavay + 12, 3, 3);rect(x + 75, lavay + 9, 3, 3);rect(x + 81, lavay + 9, 3, 3);rect(x + 78, lavay + 6, 3, 3);rect(x + 78, lavay + 9, 3, 3);rect(x + 78, lavay + 12, 3, 3);rect(x + 81, lavay + 12, 3, 3);rect(x + 81, lavay + 15, 3, 3);rect(x + 84, lavay + 12, 3, 3);rect(x + 87, lavay + 9, 3, 3);rect(x + 87, lavay + 12, 3, 3);rect(x + 87, lavay + 15, 3, 3);rect(x + 90, lavay + 12, 3, 3);rect(x + 93, lavay + 12, 3, 3);rect(x + 93, lavay + 15, 3, 3);rect(x + 93, lavay + 18, 3, 3);fill(216, 183, 57);rect(x + 0, lavay + 12, 3, 3);rect(x + 0, lavay + 6, 3, 3);rect(x + 3, lavay + 9, 3, 3);rect(x + 6, lavay + 9, 3, 3);rect(x + 9, lavay + 9, 3, 3);rect(x + 9, lavay + 12, 3, 3);rect(x + 12, lavay + 6, 3, 3);rect(x + 15, lavay + 6, 3, 3);rect(x + 15, lavay + 9, 3, 3);rect(x + 9, lavay + 3, 3, 3);rect(x + 15, lavay + 3, 3, 3);rect(x + 15, lavay + 0, 3, 3);rect(x + 18, lavay + 0, 3, 3);rect(x + 21, lavay + 3, 3, 3);rect(x + 21, lavay + 6, 3, 3);rect(x + 24, lavay + 0, 3, 3);rect(x + 27, lavay + 3, 3, 3);rect(x + 30, lavay + 3, 3, 3);rect(x + 30, lavay + 6, 3, 3);rect(x + 30, lavay + 9, 3, 3);rect(x + 36, lavay + 6, 3, 3);rect(x + 36, lavay + 9, 3, 3);rect(x + 39, lavay + 9, 3, 3);rect(x + 39, lavay + 12, 3, 3);rect(x + 42, lavay + 6, 3, 3);rect(x + 45, lavay + 9, 3, 3);rect(x + 51, lavay + 9, 3, 3);rect(x + 48, lavay + 6, 3, 3);rect(x + 48, lavay + 9, 3, 3);rect(x + 48, lavay + 12, 3, 3);rect(x + 51, lavay + 3, 3, 3);rect(x + 54, lavay + 3, 3, 3);rect(x + 54, lavay + 6, 3, 3);rect(x + 60, lavay + 6, 3, 3);rect(x + 57, lavay + 6, 3, 3);rect(x + 57, lavay + 9, 3, 3);rect(x + 60, lavay + 3, 3, 3);rect(x + 60, lavay + 0, 3, 3);rect(x + 66, lavay + 0, 3, 3);rect(x + 66, lavay + 3, 3, 3);rect(x + 66, lavay + 6, 3, 3);rect(x + 69, lavay + 3, 3, 3);rect(x + 72, lavay + 0, 3, 3);rect(x + 75, lavay + 0, 3, 3);rect(x + 75, lavay + 3, 3, 3);rect(x + 75, lavay + 6, 3, 3);rect(x + 78, lavay + 3, 3, 3);rect(x + 81, lavay + 0, 3, 3);rect(x + 84, lavay + 0, 3, 3);rect(x + 84, lavay + 3, 3, 3);rect(x + 84, lavay + 6, 3, 3);rect(x + 81, lavay + 6, 3, 3);rect(x + 87, lavay + 6, 3, 3);rect(x + 93, lavay + 6, 3, 3);rect(x + 90, lavay + 3, 3, 3);rect(x + 90, lavay + 6, 3, 3);rect(x + 90, lavay + 9, 3, 3);fill(219, 188, 70);rect(x + 0, lavay + 9, 3, 3);rect(x + 3, lavay + 6, 3, 3);rect(x + 6, lavay + 6, 3, 3);rect(x + 9, lavay + 6, 3, 3);rect(x + 12, lavay + 3, 3, 3);rect(x + 18, lavay + 3, 3, 3);rect(x + 21, lavay + 0, 3, 3);rect(x + 24, lavay + 3, 3, 3);rect(x + 27, lavay + 0, 3, 3);rect(x + 27, lavay + 6, 3, 3);rect(x + 33, lavay + 6, 3, 3);rect(x + 33, lavay + 3, 3, 3);rect(x + 39, lavay + 6, 3, 3);rect(x + 42, lavay + 9, 3, 3);rect(x + 45, lavay + 6, 3, 3);rect(x + 51, lavay + 6, 3, 3);rect(x + 57, lavay + 3, 3, 3);rect(x + 63, lavay + 0, 3, 3);rect(x + 63, lavay + 3, 3, 3);rect(x + 69, lavay + 0, 3, 3);rect(x + 72, lavay + 3, 3, 3);rect(x + 78, lavay + 0, 3, 3);rect(x + 81, lavay + 3, 3, 3);rect(x + 84, lavay + 9, 3, 3);rect(x + 87, lavay + 3, 3, 3);rect(x + 87, lavay + 0, 3, 3);rect(x + 93, lavay + 9, 3, 3);
  }
  fill(189, 56, 18);
  rect(0,lavay + 27,1000,1000);
}

//lavay = 1000
